x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
library(RJafroc)
{
fileName <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
}
fileName <- system.file("extdata", "RocData.xlsx",
package = "RJafroc", mustWork = TRUE)
RocDataXlsx <- DfReadDataFile(fileName)
fileName <- system.file("extdata", "RocData.csv",
package = "RJafroc", mustWork = TRUE)
RocDataCsv<- DfReadDataFile(fileName, format = "MRMC")
fileName <- system.file("extdata", "RocData.imrmc",
package = "RJafroc", mustWork = TRUE)
RocDataImrmc<- DfReadDataFile(fileName, format = "iMRMC")
fileName <- system.file("extdata", "FrocData.xlsx",
package = "RJafroc", mustWork = TRUE)
FrocDataXlsx <- DfReadDataFile(fileName, sequentialNames = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(testthat)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
dsx <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
dsx <- dsx[-6] # delete the data type FROC
ds <- ds[-6]# delete the data type ROC
expect_equal(dsx, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/missing2CellsRow5and7.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/missingEntireRow5.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/missing1CellRow5.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
caseID
truthTable[[1]]
as.character(truthTable[[1]])
library(RJafroc)
###########################################################################
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
library(RJafroc)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
lesionID
truthTable[[2]]
as.integer(as.character(truthTable[[2]]))
as.character(truthTable[[2]])
as.numeric(truthTable[[2]])
is.integer(as.numeric(truthTable[[2]]))
is.integer(truthTable[[2]])
is.integer(as.integer(truthTable[[2]]))
truthTable[[4]]
library(RJafroc)
is.integer(1)
is.wholenumber(1)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/incorrectWeights.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-numeric-weight.xlsx", package = "RJafroc", mustWork = TRUE)
expect_warning(expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE)))
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/duplicatedRow.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/incorrectSheetName.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
DfReadDataFile(fileName, newExcelFileFormat = TRUE
)
is.integer(truthTable[[1]])
truthTable[[1]]
typeof(truthTable)
typeof(truthTable[[1]])
!is.double(truthTable[[1]])
is.double(truthTable[[1]])
if (!is.double(truthTable[[1]])) stop("Non-integer values in Truth Table column 1")
if (!is.double(truthTable[[2]])) stop("Non-integer values in Truth Table column 2")
if (!is.double(truthTable[[3]])) stop("Non-integer values in Truth Table column 3")
is.wholenumber <- function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol
is.wholenumber(1.1)
is.wholenumber(1.1, 2)
is.wholenumber(c(1.1, 2))
if (any(!is.wholenumber(truthTable[[1]]))) stop("Non-integer values in Truth Table column 1")
if (any(!is.wholenumber(truthTable[[2]]))) stop("Non-integer values in Truth Table column 2")
if (any(!is.wholenumber(truthTable[[3]]))) stop("Non-integer values in Truth Table column 3")
if (any(!is.double(truthTable[[3]]))) stop("Non-integer values in Truth Table column 3")
library(RJafroc)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
!is.wholenumber(truthTable[[1]])
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
truthTable[[1]]
truthTable[[2]]
library(RJafroc)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
truthTable[[1]]
if (any(!is.wholenumber(as.numeric(truthTable[[1]])))) stop("Non-integer values in Truth worksheet column 1")
Q
library(RJafroc)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
ds1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInTP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInFP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
library(RJafroc)
library(devtools)
devtools::build_vignettes()
devtools::test()
library(pkgdown)
pkgdown::build_site()
library(RJafroc)
x <- dataset04
library(RJafroc)
help("RJafroc-package")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
str(x)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[1,1,1,1]
x$NL[1,2,1,1]
x$NL[1,1,5,1]
x$NL[1,1,3,1]
x$NL[1,5,2,1]
x$NL[2,3,2,1]
x$NL[2,3,3,1]
x$NL[2,3,4,1]
x$LL[1,1,5,1]
x$LL[1,2,3,1]
x$LL[1,2,2,1]
x$LL == -Inf
any(x$LL == -Inf)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x$lesionVector
x$lesionID
x$lesionWeight
sum(x$NL != -Inf)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(testthat)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x$NL[1,1,1,1]
x$NL[1,1,1,2]
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
rm(x1)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[1,1,1,1]
x$NL[1,3,4,1]
x$NL[2,2,4,1]
x$NL[1,3,8,1]
x$NL[2,3,1,]
x$LL[2,3,1,]
x$LL[1,1,1,1]
x$LL[2,1,1,1]
length(x$LL[1,1,1,])
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$dataType
x$NL[1,1,,1]
x$LL[1,1,,1]
x$lesionVector
x$lesionID
x$lesionWeight
x$NL[1,1,,1]
x$NL[1,6,,1]
x$LL[1,1,,1]
x$NL[2,1,,1]
x$LL[2,1,,1]
x$NL[1,2,,1]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
1:5
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
x$LL[,1,1:15,1]
x$LL[,2,1:15,1]
x$LL[,3,1:15,1]
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(devtools)
devtools::test()
devtools::check()
library(RJafroc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
str(x)
x$lesionVector
x$lesionID
x$lesionWeight
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
str(x)
x$NL[,1,1:15,1]
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
x$NL[,1,1:9,1]
x$NL[,2,1:9,1]
x$NL[,3,1:9,1]
library(RJafroc)
devtools::test()
help("devtools")
devtools::build_vignettes()
library(pkgdown)
pkgdown::build_site()
pkgdown::build_site()
