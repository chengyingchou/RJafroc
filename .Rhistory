fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str2expression(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
stdErrSingleRRRC
dfSingleRRRC
CIRRRC
tPr
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
str(ret1'')
str(ret1)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$Treatment)
attributes(ret1$ciAvgRdrEachTrtRRRC$Area)
attributes(ret1$ciAvgRdrEachTrtRRRC$DF)
attributes(ret1$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC$StdErr)
attributes(ret1$ciDiffTrtRRRC$t)
attributes(ret1$ciDiffTrtRRRC$CILower)
attributes(ret1$ciDiffTrtRRRC$Treatment)
attributes(ret1$ciDiffTrtRRRC$Estimate)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY)
attributes(anovaY$Source)
attributes(anovaY$SS)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY$SS)
attributes(anovaY$Source)
attributes(anovaY$MS)
attributes(anovaY$df)
attributes(anovaY$DF)
ssArray
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY$DF)
attributes(anovaY$Source)
attributes(anovaY$MS)
L3 <- LETTERS[1:3]
L3
fac <- sample(L3, 10, replace = TRUE)
fasc
fac
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
(d <- data.frame(x = 1, y = 1:10, fac = fac))
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(anovaY)
x <- 1:10
attributes(x)
attr(x,"dim") <- c(2, 5)
x
attributes(x)
attributes(anovaY)
attributes(anovaY$Source)
attributes(anovaY$SS)
msArray <- c(msT, msR, msC, msTR, msTC, msRC, msTRC)
dfArray <- c(I - 1, J - 1, K - 1, (I - 1) * (J - 1), (I - 1) * (K - 1), (J - 1) * (K - 1), (I - 1) * (J - 1) * (K - 1))
ssArray <- msArray * dfArray;attr(ssArray, "dim") <- length*(ssArray)
msArray <- c(msArray, NA)
dfArray <- c(dfArray, sum(dfArray))
ssArray <- c(ssArray, sum(ssArray))
sourceArray <- c("T", "R", "C", "TR", "TC", "RC", "TRC", "Total")
anovaY <- data.frame(Source = sourceArray, SS = ssArray, DF = dfArray, MS = msArray)
c(5)
msArray <- c(msT, msR, msC, msTR, msTC, msRC, msTRC)
dfArray <- c(I - 1, J - 1, K - 1, (I - 1) * (J - 1), (I - 1) * (K - 1), (J - 1) * (K - 1), (I - 1) * (J - 1) * (K - 1))
ssArray <- msArray * dfArray
ssArray
attributes(ssArray)
names(ssArray) <- "ssArray"
attributes(ssArray)
names(ssArray) <- rep("ssArray",length(ssArray)
)
names(ssArray) <- rep("ssArray",length(ssArray))
attributes(ssArray)
library(RJafroc)
library(testthat)
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
d <- 1
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- readRDS(fn)
attributes(ret$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC$CILower)
attributes(ciDiffTrtRRRC$Treatment)
diffTRName
Estimate
diffTRMeans
attributes(diffTRMeans)
CIRRRC
colnames(ciDiffTrtRRRC)
DF
rep(ddfRRRC, choose(I, 2))
diffTRName
diffTRMeans
rep(stdErrRRRC, choose(I, 2))
CIRRRC
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC$Estimate)
attributes(ciDiffTrtRRRC$CILower)
attributes(ciAvgRdrEachTrtRRRC)
devtools::test()
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
CISingleRRRC
str(ciAvgRdrEachTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(ciAvgRdrEachTrtRRRC)
0.988-0.941
0.941-0.894
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC) <- NULL
attributes(ciDiffTrtRRRC)
library(RJafroc)
i
j
d
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
fn
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret)
attributes(ret1)
attributes(ret$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC)
attributes(ret1$fomArray)
attributes(ret$fomArray)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciDiffTrtRRRC)
attributes(ret$ciDiffTrtRRRC)
str(ret$ciDiffTrtRRRC)
str(ret1$ciDiffTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(ret$ciDiffTrtRRRC)
str(ret1$ciDiffTrtRRRC)
str(ret1$ciAvgRdrEachTrtRRRC)
str(ret$ciAvgRdrEachTrtRRRC)
str(ret$anovaY)
str(ret1$anovaY)
str(ret$anovaYi)
str(ret1$anovaYi)
library(RJafroc)
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC)
saveRDS(ret1, file = fn)
d <- 2;i <- 2
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j])
saveRDS(ret, file = fn)
library(RJafroc)
d <- 1;i <- 1;fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
dataset <- dataset_arr[[d]]
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret$anovaY)
attributes(ret1$anovaY)
library(RJafroc)
library(devtools)
devtools::check()
library(testthat)
library(devtools)
devtools::check()
version()
R.version
devtools::check_rhub()
devtools::check()
devtools::check_rhub()
library(RJafroc)
setwd("~/RJafroc/R")
setwd("~/RJafroc")
library(RJafroc)
fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH",
overwrite = TRUE, ReportFileFormat = "xlsx")
devtools::check()
library(testthat)
devtools::check_rhub()
library(devtools)
platforms()
rhub::platforms()
plat <- rhub::platforms()
plat$name
plat$name[16-20]
plat$name[[16-20]]
plat$name[16]
plat$name[16:20]
devtools::check_rhub(platforms = plat$name[16:20])
plat$name[16:20]
plat
plat$name[16]
plat$name[16];plat$description[16]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 10;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 13;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 6;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 20;plat$name[val];plat$description[val]
devtools::check_rhub(platforms = plat$name[16])
devtools::check_rhub(platforms = plat$name[11])
devtools::check_rhub(platforms = plat$name[12])
devtools::check_rhub(platforms = plat$name[1])
devtools::check_rhub(platforms = plat$name[2])
devtools::check_rhub(platforms = plat$name[3])
devtools::check_rhub(platforms = plat$name[4])
devtools::check_rhub(platforms = plat$name[5])
devtools::check_rhub(platforms = plat$name[7])
devtools::check_rhub(platforms = plat$name[8])
devtools::check_rhub(platforms = plat$name[9])
devtools::check_rhub(platforms = plat$name[15])
library(devtools)
library(testthat)
devtools::check()
library(RJafroc)
dataset_arr <- list(dataset02, dataset05)
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
d <- 1;i <- 1;j <- 1
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues361/SigTest/", dataset_arr_str[d], FOM_arr[i], method_arr[j], ".rds")
GoodValues <- readRDS(fn)
CurrentValues <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
listMem <- 2;CurrentValues[[listMem]]
listMem <- 2;CurrentValues[[listMem]];GoodValues[[listMem]]
library(devtools)
devtools::check()
revdepcheck::revdep_check()
devtools::revdepcheck::revdep_check()
devtools::revdep()
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[14])
devtools::check_rhub(platforms = plat$name[13])
install_deps(dependencies = TRUE)
devtools::check()
library(RJafroc)
revdepcheck::revdep_check()
library(devtools)
revdepcheck::revdep_check()
install.packages("r-lib")
revdepcheck::revdep_check()
revdep()
revdep("RJafroc")
devtools::build_site()
devtools::release()
library(RJafroc)
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
plat <- rhub::platforms()
install.packages("rhub")
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[13])
devtools::check_rhub(platforms = plat$name[13])
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_oldrelease()
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_devel()
library(devtools)
devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_devel()
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check(run_dont_test = TRUE)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check_win_devel()
library(RJafroc)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
setwd("~/GitHub/RJafroc")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
devtools::check(run_dont_test = TRUE)
library(RJafroc)
dataset <- datasetCadLroc
i <- 1
FOM_arr <- c("Wilcoxon", "ALROC")
FOM <- FOM_arr[i]
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
library(testthat)
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
!file.exists(fn)
ret1 <- readRDS(fn)
UtilFigureOfMerit(dataset, FOM = FOM)
K1
FOM
dim(LL)[3]
UtilFigureOfMerit(dataset, FOM = FOM)
dataset$LLCl
FPFValue
FOM %in% c("Wilcoxon", "ALROC", "PCL")
dataset$NL
dataset$LLCl
dataset$LLCL
rm(list = ls())
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
library(RJafroc)
UtilFigureOfMerit(dataset, FOM = FOM)
UtilFigureOfMerit(datasetCadLroc, FOM = "Wilcoxon")
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
LLIl <- ds$LLIl
LLCl <- ds$LLCL
ds <- datasetCadLroc
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
str(ds$LLCl)
LLCl <- ds$LLCL
str(ds$LLCl)
LLCl <- ds$LLCL
LLIl <- ds$LLIl
lesionNum <- ds$lesionNum
lesionID <- ds$lesionID
lesionWeight <- ds$lesionWeight
dataType <- ds$dataType
modalityID <- ds$modalityID
readerID <- ds$readerID
str(ds$LLCl)
LLCl <- ds$LLCl
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
devtools::test()
fn <- paste0(test_path(), "/goodValues361/CORCBM/DfCreateCorCbmDataset", ".rds")
!file.exists(fn)
ds <- readRDS(fn)
View(ds)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
View(DfCreateCorCbmDataset)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
devtools::test()
set.seed(1)
z1 <- rnorm(5)
z2 <- rnorm(7)*1.5 + 2
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/Df2RJafrocDataset-1", ".rds")
!file.exists(fn)
ds <- Df2RJafrocDataset(z1, z2)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2), ds)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
fileName
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
LL[1,1,1,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
NL[i, j, 1:K1, ]
LL[i, j, , ] != UNINITIALIZED
max(lesionVector)
rowSums(temp)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
K2
max(lesionVector)
is.finite(LL[1,1,1,])
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
max(lesionVector)
lesionVector
lesionVector <- array(40)
sum(is.finite(LL[1,1,1:40,]))
sum(is.finite(LL[1,1,1,]))
sum(is.finite(LL[1,1,2,]))
K2
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
lesionVector <- array(K2)
lesionVector
lesionVector <- array(dim = K2)
lesionVector
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,1,k,]))
}
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
LL[1,1,k,]
is.finite(LL[1,1,k,])
sum(is.finite(LL[1,1,k,]))
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
isROI
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
temp
lesionVector
rowSums(temp)
lesionVector
temp <- NL[i, j, (K1 + 1):K, ] == UNINITIALIZED
temp
library(RJafroc)
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
lesionVector[7]
LL[1,1,7,]
NL[1,1,57,]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
devtools::test()
library(RJafroc)
devtools::test()
devtools::check()
