devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_devel()
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check(run_dont_test = TRUE)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check_win_devel()
library(RJafroc)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
setwd("~/GitHub/RJafroc")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
devtools::check(run_dont_test = TRUE)
library(RJafroc)
dataset <- datasetCadLroc
i <- 1
FOM_arr <- c("Wilcoxon", "ALROC")
FOM <- FOM_arr[i]
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
library(testthat)
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
!file.exists(fn)
ret1 <- readRDS(fn)
UtilFigureOfMerit(dataset, FOM = FOM)
K1
FOM
dim(LL)[3]
UtilFigureOfMerit(dataset, FOM = FOM)
dataset$LLCl
FPFValue
FOM %in% c("Wilcoxon", "ALROC", "PCL")
dataset$NL
dataset$LLCl
dataset$LLCL
rm(list = ls())
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
library(RJafroc)
UtilFigureOfMerit(dataset, FOM = FOM)
UtilFigureOfMerit(datasetCadLroc, FOM = "Wilcoxon")
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
LLIl <- ds$LLIl
LLCl <- ds$LLCL
ds <- datasetCadLroc
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
str(ds$LLCl)
LLCl <- ds$LLCL
str(ds$LLCl)
LLCl <- ds$LLCL
LLIl <- ds$LLIl
lesionNum <- ds$lesionNum
lesionID <- ds$lesionID
lesionWeight <- ds$lesionWeight
dataType <- ds$dataType
modalityID <- ds$modalityID
readerID <- ds$readerID
str(ds$LLCl)
LLCl <- ds$LLCl
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
devtools::test()
fn <- paste0(test_path(), "/goodValues361/CORCBM/DfCreateCorCbmDataset", ".rds")
!file.exists(fn)
ds <- readRDS(fn)
View(ds)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
View(DfCreateCorCbmDataset)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
devtools::test()
set.seed(1)
z1 <- rnorm(5)
z2 <- rnorm(7)*1.5 + 2
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/Df2RJafrocDataset-1", ".rds")
!file.exists(fn)
ds <- Df2RJafrocDataset(z1, z2)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2), ds)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
fileName
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
LL[1,1,1,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
NL[i, j, 1:K1, ]
LL[i, j, , ] != UNINITIALIZED
max(lesionVector)
rowSums(temp)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
K2
max(lesionVector)
is.finite(LL[1,1,1,])
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
max(lesionVector)
lesionVector
lesionVector <- array(40)
sum(is.finite(LL[1,1,1:40,]))
sum(is.finite(LL[1,1,1,]))
sum(is.finite(LL[1,1,2,]))
K2
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
lesionVector <- array(K2)
lesionVector
lesionVector <- array(dim = K2)
lesionVector
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,1,k,]))
}
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
LL[1,1,k,]
is.finite(LL[1,1,k,])
sum(is.finite(LL[1,1,k,]))
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
isROI
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
temp
lesionVector
rowSums(temp)
lesionVector
temp <- NL[i, j, (K1 + 1):K, ] == UNINITIALIZED
temp
library(RJafroc)
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
lesionVector[7]
LL[1,1,7,]
NL[1,1,57,]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
devtools::test()
library(RJafroc)
devtools::test()
devtools::check()
library(RJafroc)
i <- 1;truthTable[grep("^\\s*$", truthTable[ , i]), i]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
sheetNames
splitPlot
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedFrocData.xlsx")
i <- 1;truthTable[grep("^\\s*$", truthTable[ , i]), i]
truthTable[ , i]
truthTable[ , 2]
truthTable[ , 4]
i <- 4;truthTable[grep("^\\s*$", truthTable[ , i]), i]
i <- 4;grep("^\\s*$", truthTable[ , i])
grep("^\\s*$", "1 2 3")
grep("^\\s*$", "1 a 2 3")
grep("^\\s*$", "1a23")
grep("^\\s*$", "abc")
grep("^\\s*$", "abc 1000")
grep("^\\s*$", "")
grep("^\\s*$", "\n")
grep("^\\s*$", "\n\t   ")
grep("^\\s*$", "\n\t   123")
grep("^\\s*$", "\n\t   \n  \t")
is.na(truthTable)
## delete empty rows
naRows <- colSums(is.na(truthTable))
naRows
truthlesionID
naRows
LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerColumn
readerColumn[1,]
readerColumn[2,]
i <- 1;!all(readerColumn[i,] == i)
readerColumn[i,1]
(!all(readerColumn[i,] == readerColumn[i,1]))
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerID
readerColumn
rdrs
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
modalityID
readerColumn[1,1])
readerColumn[1,1]
TruthTable$ReaderID
strsplit(TruthTable$ReaderID[1])
strsplit(TruthTable$ReaderID[1], split = ",")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
strsplit(TruthTable$ReaderID[1], split = ",")
strsplit(TruthTable$ReaderID, split = ",")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerColumn[1]
readerColumn[1,1]
readerColumn[[1]]
readerColumn[[1]][1]
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
truthCaseID
truthlesionID
lesionVector <- as.vector(table(truthCaseID[truthCaseID %in% abnormalCases]))
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
weights
lesionWeight <- array(dim = c(length(abnormalCases), max(lesionVector)))
as.character(TruthTable[, 3])
as.numeric(as.character(TruthTable[, 3]))
any(is.na(as.numeric(as.character(TruthTable[, 3]))))
NA !- 0
NA == 0
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
lesionVector
lesionWeight
lesionIDTable
truthCaseID == abnormalCases[k2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
abnormalCases[k2]
truthCaseID
lesionIDTable[k2, ]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
truthWeights
sum(truthWeights[1])
sum(truthWeights[4])
sum(truthWeights)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
K2 == length(lesionVector)
as.numeric(as.character(TruthTable[, 3]))
((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
ID <- ((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
any(ID)
naLines <- which(ID) + 1 # to account for header row
((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
ID <- as.numeric(as.character(TruthTable[, 3]))
ID
bad <- which((ID != 0) | (ID != 1))
bad <- which((ID != 0))
bad <- which((ID != 1))
bad <- allCases[which((ID != 1))]
normalCases[which(ID != 0)]
which(ID != 0)
normalCases[which(ID != 0)]
ID
as.numeric(as.character(TruthTable[, 3]))
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
wghts
sum(wghts) != 0
wghts[wghts != 0]
wghts[1:K1]
wghts[1:K1] != 0
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
wghts[(K1+1):K2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
(wghts[(K1+1):K] != 1)
wghts[(K1+1):K] != 0
wghts[(K1+1):K] != 1
wghts[1:K1]
wghts[1:K1] != 0
normalCases[which(wghts != 0)]
wghts
lesionVector
wghts #in# c(0,1)
wghts %in% c(0,1)
wghts[wghts %in% c(0,1)]
wghts[!(wghts %in% c(0,1))]
!(wghts %in% c(0,1))
allCases[!(wghts %in% c(0,1))]
badWeights <- allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
badWeights == NULL
allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
if (badWeights) stop("Error")
length(badWeights) == 0
wghts <- as.numeric(as.character(TruthTable[, 3]))
badWeights <- allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
if (length(badWeights) > 0) {
naLines <- which(ID) + 1 # to account for header row
errorMsg <- paste0("There are incorrect weight entries for CaseID(s) ",
paste(badWeights, collapse = ", "), " in the TRUTH table.")
stop(errorMsg)
}
length(badWeights) > 0
wghts <- as.numeric(as.character(TruthTable[, 3]))
badWeights <- allCases[!(wghts %in% c(0,1))]
if (length(badWeights) > 0) {
naLines <- which(ID) + 1 # to account for header row
errorMsg <- paste0("There are incorrect weight entries for CaseID(s) ",
paste(badWeights, collapse = ", "), " in the TRUTH table.")
stop(errorMsg)
}
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
abnormalCase[k2]
abnormalCases[k2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
length(abnormalCases)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
NLReaderID
NLModalityID
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
sum(k)
retNL$NLCaseID[k]
table(retNL$NLCaseID[k])
max(table(retNL$NLCaseID[k]))
modalityID
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
LLReaderID
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds$NL[1,1,6:8,1]
ds$LL[1,1,,1]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
NLModalityID
modalityID
LLReaderID
NLReaderID
NLModalityID
LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
LLRating[1,1,,1]
any(LLRating == UNINITIALIZED)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
modalityID
readerID
sum(k)
retLL$LLModalityID
retLL$LLModalityID
retLL$LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
abnormalCases
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
retTruth$lesionIDLabels
retTruth$LLLesionID[k]
retTruth$LLLesionIDLabels
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
IDs
which(IDs[k1] == abnormalCases)
LLCaseID[k]
LLCaseID
LLCaseID[k]
IDs[k1]
IDs[k1] == abnormalCases
which(IDs[k1] == abnormalCases)
which(LLLesionID[k][x2][el] == x3)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
el
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
x5
k
[x5][el]
LLRating[k][x5][el]
LLRating[k]
LLRating[k][x5]
LLRating[k][x5][el]
x1
x4
k
k1
k1
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
names(modalityID)
modalityNames
readerNames
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx", renumber = TRUE)
modalityID
modalityID
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx", sequentialNames = TRUE)
library(RJafroc)
