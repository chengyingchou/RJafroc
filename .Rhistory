saveRDS(x1, file = fn)
x2 <- DfExtractDataset(temp, rdrs = c(1, 3))
expect_equal(x1, x2)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
x1 <- DfExtractDataset(temp, rdrs = c(1, 2, 3))
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <- DfExtractDataset(temp, rdrs = c(1, 2, 3))
expect_equal(x1, x2)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpC.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfExtractDataset/frocSpC", ".rds")
x1 <-  DfExtractDataset(temp, rdrs = c(1, 3))
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <-  DfExtractDataset(temp, rdrs = c(1, 3))
expect_equal(x1, x2)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfExtractDataset/frocCr", ".rds")
x1 <- DfExtractDataset(temp, rdrs = c(1, 3))
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <- DfExtractDataset(temp, rdrs = c(1, 3))
expect_equal(x1, x2)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfExtractDataset/frocSpA", ".rds")
x1 <- DfExtractDataset(temp, rdrs = c(1, 2, 3))
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <- DfExtractDataset(temp, rdrs = c(1, 2, 3))
expect_equal(x1, x2)
devtools::build_vignettes()
sysFileName
fileName <- "Roc.xlsx"
sysFileName <- system.file(paste0("extdata/",fileName), package = "RJafroc", mustWork = TRUE)
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
fileName
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
library(RJafroc)
devtools::build_vignettes()
library(RJafroc)
set.seed(1)
K1 <- 5;K2 <- 7;
maxLL <- 2;perCase <- floor(runif(K2, 1, maxLL + 1))
mu <- 1;lambda <- 1;nu <- 1 ;zeta1 <- -1
I <- 2; J <- 5
fn <- paste0(test_path(), "/goodValues361/SimulateDatasets/SimulateFrocDataset", ".rds")
ret <- SimulateFrocDataset(
mu = mu, lambda = lambda, nu = nu, zeta1 = zeta1,
I = I, J = J, K1 = K1, K2 = K2, perCase = perCase)
saveRDS(ret, file = fn)
set.seed(1)
K1 <- 5;K2 <- 7;
maxLL <- 2;perCase <- floor(runif(K2, 1, maxLL + 1))
mu <- 1;lambda <- 1;nu <- 1 ;zeta1 <- -1
ret <- readRDS(fn)
expect_equal(SimulateFrocDataset(
mu = mu, lambda = lambda, nu = nu, zeta1 = zeta1,
I = I, J = J, K1 = K1, K2 = K2, perCase = perCase), ret)
# end of test
set.seed(1)
K1 <- 5;K2 <- 7;
a <- 1.5;b <- 0.5
fn <- paste0(test_path(), "/goodValues361/SimulateDatasets/SimulateRocDataset", ".rds")
ret <- SimulateRocDataset(K1 = K1, K2 = K2,a = a, b = b)
saveRDS(ret, file = fn)
set.seed(1)
ret <- readRDS(fn)
expect_equal(SimulateRocDataset(K1 = K1, K2 = K2,a = a, b = b), ret)
fileName <- system.file(
"extdata", "RocData.csv", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/csv", ".rds")
temp <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "RocData.csv", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/csv", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "RocData.lrc", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/lrc", ".rds")
ds <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(ds, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "RocData.imrmc", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/iMRMC", ".rds")
ds <- DfReadDataFile(fileName, format = "iMRMC")
saveRDS(ds, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, format = "iMRMC")
expect_equal(temp, ds)
fileName <- system.file("extdata", "RocData.txt", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/txt", ".rds")
ds <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(ds, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "Roc.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/jafroc-oldExcelFormat", ".rds")
ds <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "Froc.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/jafroc-newExcelFormat", ".rds")
ds <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "Froc.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/jafroc-renum", ".rds")
ds <- DfReadDataFile(fileName, sequentialNames = TRUE, newExcelFileFormat = FALSE)
saveRDS(ds, file = fn)
ds1 <- readRDS(fn)
ds2 <- DfReadDataFile(fileName, sequentialNames = TRUE, newExcelFileFormat = FALSE)
expect_equal(ds2, ds1)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/FrocSpCVaryK1K2.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/FrocSpCVaryK1K2", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCrStrRdrsTrts.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCrStrRdrsTrts", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCrStrRdrsTrts.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCrStrRdrsTrts", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSpC.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSpC", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSpA", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCrStrRdrsTrts.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCrStrRdrsTrts", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpC.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSpC", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSpA", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/1T3Rvs4R.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/1T3Rvs4R", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/1T3Rvs4R.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/1T3Rvs4R", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSpA.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
x1 <- UtilPseudoValues(temp, FOM = "wAFROC")
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <- UtilPseudoValues(temp, FOM = "wAFROC")
expect_equal(x1, x2)
# a small ROC dataset
set.seed(1)
z1 <- rnorm(5);z2 <- rnorm(7)*1.5 + 2
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/SmallRocDataset", ".rds")
ds <- Df2RJafrocDataset(z1, z2)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2), ds)
K1t <- c(30, 19, 8, 2, 1)
K2t <- c(5,  6, 5, 12, 22)
dataset <- Df2RJafrocDataset(K1t, K2t, InputIsCountsTable = TRUE)
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/CountsTableInput", ".rds")
ds <- Df2RJafrocDataset(K1t, K2t, InputIsCountsTable = TRUE)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(K1t, K2t, InputIsCountsTable = TRUE), ds)
set.seed(1)
I <- 2;J <- 3
K1 <- 25;K2 <- 35
z1 <- array(dim = c(I, J, K1))
z2 <- array(dim = c(I, J, K2))
mu <- 2;sigma <- 1.5
for (i in 1:I) {
for (j in 1:J) {
z1[i,j,1:K1] <- rnorm(K1)
z2[i,j,] <- rnorm(K2) * sigma + mu
}
}
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/largerMRMCDataset", ".rds")
ds <- Df2RJafrocDataset(z1, z2)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2), ds)
set.seed(1)
I <- 2;J <- 3
K1 <- 25;K2 <- 35
mu <- 1;nuP <- 0.8;lambdaP <- 1;zeta1 <- 0
lambda <- UtilPhysical2IntrinsicRSM(mu,lambdaP,nuP)$lambda
nu <- UtilPhysical2IntrinsicRSM(mu,lambdaP,nuP)$nu
Lmax <- 2;Lk2 <- floor(runif(K2, 1, Lmax + 1))
z1 <- array(-Inf,dim = c(I,J,K1+K2,40))
z2 <- array(-Inf,dim = c(I,J,K2,40))
dimNL <- array(dim=c(I,J,2))
dimLL <- array(dim=c(I,J,2))
for (i in 1:I) {
for (j in 1:J) {
frocDataRaw <- SimulateFrocDataset(
mu, lambda, nu, zeta1, I = 1, J = 1, K1, K2, perCase = Lk2)
dimNL[i,j,] <- dim(drop(frocDataRaw$ratings$NL))
dimLL[i,j,] <- dim(drop(frocDataRaw$ratings$LL))
z1[i,j,,1:dimNL[i,j,2]] <- drop(frocDataRaw$ratings$NL) # drop the excess location indices
z2[i,j,,1:dimLL[i,j,2]] <- drop(frocDataRaw$ratings$LL)
}
}
z1 <- z1[,,,1:max(dimNL[,,2])]
z2 <- z2[,,,1:max(dimLL[,,2])]
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/FrocDataset", ".rds")
ds <- Df2RJafrocDataset(z1, z2, perCase = Lk2) # an FROC dataset
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2, perCase = Lk2), ds) # an FROC dataset
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/FROC/1T3Rvs4R.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/1T3Rvs4R", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/1T3Rvs4R.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/1T3Rvs4R", ".rds")
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
ds <- readRDS(fn)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
expect_equal(temp, ds)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(testthat)
x1 <- UtilMeanSquares(dataset05, FOM = F"HrSe", method = "DBM")
x1 <- UtilMeanSquares(dataset05, FOM = "HrSe", method = "DBM")
d <- 2;f <- 7;m <- 1
dataset_arr <- c("dataset02", "dataset05")
FOM_arr <- c("MaxNLF","HrSp", "ExpTrnsfmSp", "MaxLLF",
"Wilcoxon", "HrAuc", "HrSe",
"wAFROC","AFROC", "wAFROC1","AFROC1",
"MaxNLFAllCases") # adding ROI and two Song FOMs a total of 15 FOMs
method_arr <- c("DBM", "OR")
dataset <- get(dataset_arr[d])
fn <- paste0(test_path(), "/goodValues361/MeanSquares/",
dataset_arr[d], FOM_arr[f],"-", method_arr[m], ".rds")
fn
x1 <- UtilMeanSquares(dataset, FOM = FOM_arr[f], method = method_arr[m])
saveRDS(x1, file = fn)
x1 <- readRDS(fn)
x2 <- UtilMeanSquares(dataset, FOM = FOM_arr[f], method = method_arr[m])
expect_equal(x1, x2,
info = paste0("Dataset = ",dataset_arr[d],", FOM = ",FOM_arr[f],", method = ",method_arr[m])
library(devtools)
devtools::test()
library(RJafroc)
devtools::test()
dataset <- dataset05
# "Wilcoxon" will generate error, skipping "SongA1" and "SongA2"
FOM_arr <- c("AFROC", "AFROC1", "wAFROC", "wAFROC1", "MaxNLF", "MaxLLF", "MaxNLFAllCases",
"ExpTrnsfmSp", "HrSp", "HrSe")
devtools::test()
StSignificanceTesting(dataset05, FOM = "FOM_wAFROC1", method = "DBM")
FOM
library(RJafroc)
library(RJafroc)
library(RJafroc)
devtools::test()
pkgdown::build_site()
library(RJafroc)
library(RJafroc)
devtools::test()
library(RJafroc)
library(RJafroc)
devtools::test()
x1 <- SsSampleSizeKGivenJ(dataset03, FOM = "Wilcoxon", effectSize = 0.05, J = 6, method = "OR")
library(RJafroc)
devtools::test()
devtools::test()
fileName <- system.file(
"extdata", "/toyFiles/FROC/1T3Rvs4R.xlsx", package = "RJafroc", mustWork = TRUE)
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
library(RJafroc)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
RRRC
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
stdErr_i[i]
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
theta_dot_dot
sort(c(theta_dot_dot - qt(alpha/2, df2_i[i]) * stdErr_i[i],
theta_dot_dot + qt(alpha/2, df2_i[i]) * stdErr_i[i]))
theta_dot_dot
stdErr_i
theta_dot_dot - qt(alpha/2, df2_i[i]) * stdErr_i[i]
alpha
qt(alpha/2, df2_i[i])
df2_i
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
RRRC
mean(0.60766103, 0.72228577)
theta_i_dot
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
RRRC
mean(0.57599071, 0.69061545)
mean(c(0.57599071, 0.69061545))
mean(c(0.57227380, 0.82101365))
df2
df2_i
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
(msR_T_i[i] +  J_i[i] * max(Cov2_i[i]-Cov3_i[i],0))^2/(msR_T_i[i]^2)*(J_i[i]-1)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
RRRC
mean(c(-0.2670129, 0.1403316))
TRanova
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
FOMs
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
FOMs
library(RJafroc)
library(RJafroc)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
msArray
TRanova
diffTRName
modalityID
paste0("trt", modalityID[i])
FOMs
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
rowName
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
rowName
MeanSquares
MeanSquares <- data.frame("MST" = c(msT, NA),
"msR" = msR_i,
"ms[R(T)]" = msR_T_,
stringsAsFactors = FALSE)
MeanSquares
MeanSquares <- data.frame("MST" = c(msT, NA),
"msR" = msR_i,
"ms[R\(T\)]" = msR_T_,
stringsAsFactors = FALSE)
MeanSquares <- data.frame("MST" = c(msT, NA),
"msR" = msR_i,
"ms['R(T)']" = msR_T_,
stringsAsFactors = FALSE)
MeanSquares
MeanSquares <- data.frame("MST" = c(msT, NA),
"msR" = msR_i,
"msR_T_" = msR_T_,
stringsAsFactors = FALSE)
rownames(MeanSquares) <- rowName
MeanSquares
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
library(RJafroc)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
library(RJafroc)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
rownames(VarCom) <- trtNames
VarCom
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
ANOVA
RRRC
RRRC <- list()
RRRC$FTests <- data.frame(DF = c((I-1),df2),
"F_OR_num_den" = c(msT, msR_T_ + den),
FStat = c(F_OR, NA),
p = c(pValue, NA),
row.names = c("Treatment", "Error"),
stringsAsFactors = FALSE)
RRRC
library(RJafroc)
0.0070210669/0.0068785766
1 - pf(1.0207151, 1, 6.184442)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
x2
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
theta_i_dot
retSt$FOMs
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
x2
library(RJafroc)
library(RJafroc)
x2 <- StSignificanceTesting(temp, FOM = "wAFROC", method = "OR")
x2
devtools::test()
pkgdown::build_site()
