fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH",
overwrite = TRUE, ReportFileFormat = "xlsx")
devtools::check()
library(testthat)
devtools::check_rhub()
library(devtools)
platforms()
rhub::platforms()
plat <- rhub::platforms()
plat$name
plat$name[16-20]
plat$name[[16-20]]
plat$name[16]
plat$name[16:20]
devtools::check_rhub(platforms = plat$name[16:20])
plat$name[16:20]
plat
plat$name[16]
plat$name[16];plat$description[16]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 10;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 13;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 6;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 20;plat$name[val];plat$description[val]
devtools::check_rhub(platforms = plat$name[16])
devtools::check_rhub(platforms = plat$name[11])
devtools::check_rhub(platforms = plat$name[12])
devtools::check_rhub(platforms = plat$name[1])
devtools::check_rhub(platforms = plat$name[2])
devtools::check_rhub(platforms = plat$name[3])
devtools::check_rhub(platforms = plat$name[4])
devtools::check_rhub(platforms = plat$name[5])
devtools::check_rhub(platforms = plat$name[7])
devtools::check_rhub(platforms = plat$name[8])
devtools::check_rhub(platforms = plat$name[9])
devtools::check_rhub(platforms = plat$name[15])
library(devtools)
library(testthat)
devtools::check()
library(RJafroc)
dataset_arr <- list(dataset02, dataset05)
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
d <- 1;i <- 1;j <- 1
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues361/SigTest/", dataset_arr_str[d], FOM_arr[i], method_arr[j], ".rds")
GoodValues <- readRDS(fn)
CurrentValues <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
listMem <- 2;CurrentValues[[listMem]]
listMem <- 2;CurrentValues[[listMem]];GoodValues[[listMem]]
library(devtools)
devtools::check()
revdepcheck::revdep_check()
devtools::revdepcheck::revdep_check()
devtools::revdep()
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[14])
devtools::check_rhub(platforms = plat$name[13])
install_deps(dependencies = TRUE)
devtools::check()
library(RJafroc)
revdepcheck::revdep_check()
library(devtools)
revdepcheck::revdep_check()
install.packages("r-lib")
revdepcheck::revdep_check()
revdep()
revdep("RJafroc")
devtools::build_site()
devtools::release()
library(RJafroc)
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
plat <- rhub::platforms()
install.packages("rhub")
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[13])
devtools::check_rhub(platforms = plat$name[13])
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_oldrelease()
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_devel()
library(devtools)
devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_devel()
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check(run_dont_test = TRUE)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check_win_devel()
devtools::check_win_devel()
library(RJafroc)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
setwd("~/GitHub/RJafroc")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
devtools::check(run_dont_test = TRUE)
library(RJafroc)
dataset <- datasetCadLroc
i <- 1
FOM_arr <- c("Wilcoxon", "ALROC")
FOM <- FOM_arr[i]
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
library(testthat)
fn <- paste0(test_path(), "/goodValues361/FOM/UtilFigureOfMeritLROC-", FOM, ".rds")
!file.exists(fn)
ret1 <- readRDS(fn)
UtilFigureOfMerit(dataset, FOM = FOM)
K1
FOM
dim(LL)[3]
UtilFigureOfMerit(dataset, FOM = FOM)
dataset$LLCl
FPFValue
FOM %in% c("Wilcoxon", "ALROC", "PCL")
dataset$NL
dataset$LLCl
dataset$LLCL
rm(list = ls())
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
library(RJafroc)
UtilFigureOfMerit(dataset, FOM = FOM)
UtilFigureOfMerit(datasetCadLroc, FOM = "Wilcoxon")
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
LLCl <- ds$LLCL
LLIl <- ds$LLIl
LLCl <- ds$LLCL
ds <- datasetCadLroc
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
ds <- datasetCadLroc
NL <- ds$NL
str(ds$LLCl)
LLCl <- ds$LLCL
str(ds$LLCl)
LLCl <- ds$LLCL
LLIl <- ds$LLIl
lesionNum <- ds$lesionNum
lesionID <- ds$lesionID
lesionWeight <- ds$lesionWeight
dataType <- ds$dataType
modalityID <- ds$modalityID
readerID <- ds$readerID
str(ds$LLCl)
LLCl <- ds$LLCl
source('~/Desktop/FixRJafrocDatasets/fixDatasetsLROC.R')
load("~/GitHub/RJafroc/data/datasetCadLroc.RData")
devtools::test()
fn <- paste0(test_path(), "/goodValues361/CORCBM/DfCreateCorCbmDataset", ".rds")
!file.exists(fn)
ds <- readRDS(fn)
View(ds)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
View(DfCreateCorCbmDataset)
DfCreateCorCbmDataset <- readRDS("~/GitHub/RJafroc/tests/testthat/goodValues361/CORCBM/DfCreateCorCbmDataset.rds")
devtools::test()
set.seed(1)
z1 <- rnorm(5)
z2 <- rnorm(7)*1.5 + 2
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/Df2RJafrocDataset-1", ".rds")
!file.exists(fn)
ds <- Df2RJafrocDataset(z1, z2)
saveRDS(ds, file = fn)
ds <- readRDS(fn)
expect_equal(Df2RJafrocDataset(z1, z2), ds)
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedROIData.xlsx")
ds <- DfReadDataFile("~GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
fileName
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
LL[1,1,1,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
NL[i, j, 1:K1, ]
LL[i, j, , ] != UNINITIALIZED
max(lesionVector)
rowSums(temp)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
K2
max(lesionVector)
is.finite(LL[1,1,1,])
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
max(lesionVector)
lesionVector
lesionVector <- array(40)
sum(is.finite(LL[1,1,1:40,]))
sum(is.finite(LL[1,1,1,]))
sum(is.finite(LL[1,1,2,]))
K2
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
lesionVector <- array(K2)
lesionVector
lesionVector <- array(dim = K2)
lesionVector
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
lesionVector
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,2,k,]))
}
I <- length(NL[,1,1,1])
J <- length(NL[1,,1,1])
K <- length(NL[1,1,,1])
K2 <- length(LL[1,1,,1])
K1 <- K - K2
maxNL <- length(NL[1,1,1,])
lesionVector <- array(dim = K2)
for (k in 1:K2) {
lesionVector[k] <- sum(is.finite(LL[1,1,k,]))
}
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
LL[1,1,k,]
is.finite(LL[1,1,k,])
sum(is.finite(LL[1,1,k,]))
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
isROI
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
temp
lesionVector
rowSums(temp)
lesionVector
temp <- NL[i, j, (K1 + 1):K, ] == UNINITIALIZED
temp
library(RJafroc)
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
lesionVector
lesionVector[7]
LL[1,1,7,]
NL[1,1,57,]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRoiData.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
devtools::test()
library(RJafroc)
devtools::test()
devtools::check()
library(RJafroc)
i <- 1;truthTable[grep("^\\s*$", truthTable[ , i]), i]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
sheetNames
splitPlot
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedFrocData.xlsx")
i <- 1;truthTable[grep("^\\s*$", truthTable[ , i]), i]
truthTable[ , i]
truthTable[ , 2]
truthTable[ , 4]
i <- 4;truthTable[grep("^\\s*$", truthTable[ , i]), i]
i <- 4;grep("^\\s*$", truthTable[ , i])
grep("^\\s*$", "1 2 3")
grep("^\\s*$", "1 a 2 3")
grep("^\\s*$", "1a23")
grep("^\\s*$", "abc")
grep("^\\s*$", "abc 1000")
grep("^\\s*$", "")
grep("^\\s*$", "\n")
grep("^\\s*$", "\n\t   ")
grep("^\\s*$", "\n\t   123")
grep("^\\s*$", "\n\t   \n  \t")
is.na(truthTable)
## delete empty rows
naRows <- colSums(is.na(truthTable))
naRows
truthlesionID
naRows
LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerColumn
readerColumn[1,]
readerColumn[2,]
i <- 1;!all(readerColumn[i,] == i)
readerColumn[i,1]
(!all(readerColumn[i,] == readerColumn[i,1]))
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerID
readerColumn
rdrs
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
modalityID
readerColumn[1,1])
readerColumn[1,1]
TruthTable$ReaderID
strsplit(TruthTable$ReaderID[1])
strsplit(TruthTable$ReaderID[1], split = ",")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
strsplit(TruthTable$ReaderID[1], split = ",")
strsplit(TruthTable$ReaderID, split = ",")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
readerColumn[1]
readerColumn[1,1]
readerColumn[[1]]
readerColumn[[1]][1]
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
truthCaseID
truthlesionID
lesionVector <- as.vector(table(truthCaseID[truthCaseID %in% abnormalCases]))
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
weights
lesionWeight <- array(dim = c(length(abnormalCases), max(lesionVector)))
as.character(TruthTable[, 3])
as.numeric(as.character(TruthTable[, 3]))
any(is.na(as.numeric(as.character(TruthTable[, 3]))))
NA !- 0
NA == 0
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
lesionVector
lesionWeight
lesionIDTable
truthCaseID == abnormalCases[k2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
abnormalCases[k2]
truthCaseID
lesionIDTable[k2, ]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
truthWeights
sum(truthWeights[1])
sum(truthWeights[4])
sum(truthWeights)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
K2 == length(lesionVector)
as.numeric(as.character(TruthTable[, 3]))
((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
ID <- ((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
any(ID)
naLines <- which(ID) + 1 # to account for header row
((as.numeric(as.character(TruthTable[, 3])) %% 1) != 0)
ID <- as.numeric(as.character(TruthTable[, 3]))
ID
bad <- which((ID != 0) | (ID != 1))
bad <- which((ID != 0))
bad <- which((ID != 1))
bad <- allCases[which((ID != 1))]
normalCases[which(ID != 0)]
which(ID != 0)
normalCases[which(ID != 0)]
ID
as.numeric(as.character(TruthTable[, 3]))
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
wghts
sum(wghts) != 0
wghts[wghts != 0]
wghts[1:K1]
wghts[1:K1] != 0
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
wghts[(K1+1):K2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
(wghts[(K1+1):K] != 1)
wghts[(K1+1):K] != 0
wghts[(K1+1):K] != 1
wghts[1:K1]
wghts[1:K1] != 0
normalCases[which(wghts != 0)]
wghts
lesionVector
wghts #in# c(0,1)
wghts %in% c(0,1)
wghts[wghts %in% c(0,1)]
wghts[!(wghts %in% c(0,1))]
!(wghts %in% c(0,1))
allCases[!(wghts %in% c(0,1))]
badWeights <- allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
badWeights == NULL
allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
if (badWeights) stop("Error")
length(badWeights) == 0
wghts <- as.numeric(as.character(TruthTable[, 3]))
badWeights <- allCases[!(wghts %in% c(0,1, 0.5, 1.1))]
if (length(badWeights) > 0) {
naLines <- which(ID) + 1 # to account for header row
errorMsg <- paste0("There are incorrect weight entries for CaseID(s) ",
paste(badWeights, collapse = ", "), " in the TRUTH table.")
stop(errorMsg)
}
length(badWeights) > 0
wghts <- as.numeric(as.character(TruthTable[, 3]))
badWeights <- allCases[!(wghts %in% c(0,1))]
if (length(badWeights) > 0) {
naLines <- which(ID) + 1 # to account for header row
errorMsg <- paste0("There are incorrect weight entries for CaseID(s) ",
paste(badWeights, collapse = ", "), " in the TRUTH table.")
stop(errorMsg)
}
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
lesionVector
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/OK.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
abnormalCase[k2]
abnormalCases[k2]
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/incorrectWeights.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
length(abnormalCases)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/duplicatedRow.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
NLReaderID
NLModalityID
