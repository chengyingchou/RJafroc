)
library(ggplot2)
library(kableExtra)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
myTab <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(myTab) <- rowNames
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- c(1,2,5,10,12,15,20)
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7), fCrit = qf(1-alpha, ndf, 100))
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(RJafroc)
StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
qt(0.975, Inf)
pnorm(0.975)
pnorm(0.975, lower.tail = F)
pnorm(0.975, lower.tail = T)
qnorm(0.975)
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
FRRC
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ANOVA$IndividualRdr[,3:4]
FRRC$IndividualRdrVarCov1
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ANOVA$IndividualRdr
ci
library(devtools)
devtools::test()
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
st
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
FRRC$FTests
FRRC
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
RRFC$FTests
diffTRName
CI
den
trtMeanDiffs
library(RJafroc)
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
source('~/GitHub/RJafroc/R/SimulateFrocDataset.R')
library(RJafroc)
library(devtools)
devtools::test()
library(testthat)
library(RJafroc)
devtools::test()
library(RJafroc)
RRRC_2T_PCL_0_2 <- StSignificanceTestingCadVsRad (datasetCadLroc,
FOM = "PCL", FPFValue = 0.2, method = "2T-RRRC")
RRRC_2T_PCL_0_2$ciDiffFom
?`RJafroc-package`
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
## i.e., 90% of dis. cases have one lesion, and 10% have two lesions
UtilAucsRSM(mu, lambdaP, nuP, lesDistr)$aucROC
UtilAucsRSM(mu, lambdaP, nuP, lesDistr)$aucAFROC
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
## i.e., 90% of dis. cases have one lesion, and 10% have two lesions
UtilAucsRSM(mu, lambdaP, nuP, lesDistr)$aucROC
x <- UtilAucsRSM(mu, lambdaP, nuP, lesDistr)
x$aucAFROC
library(RJafroc)
library(RJafroc)
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
## i.e., 90% of dis. cases have one lesion, and 10% have two lesions
x <- UtilAucsRSM(mu, lambdaP, nuP, lesDistr)
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
## i.e., 90% of dis. cases have one lesion, and 10% have two lesions
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
## i.e., 90% of dis. cases have one lesion, and 10% have two lesions
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesDistr
UtilLesionWeightsDistr (dataset11)
str(dataset11)
str(dataset02)
str(dataset02)
UtilLesionWeightsDistr (dataset02)
UtilLesionWeightsDistr (dataset04)
lesDistr <- c(1, 1)
dim(lesDistr) <- c(1, 2)
lesDistr
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesDistr
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesDistr
mu <- 1;lambdaP <- 1;nuP <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
lesDistr
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lambdaP
lesWghtDistr
maxwLLF
lesWghtDistr
lesDistr
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
maxLLF
maxTPF
lesWghtDistr
maxFPF
maxTPF
maxFPF
mu
ret <- UtilIntrinsic2PhysicalRSM(mu = 1, lambda = 1, nu = 1)
ret$lambdaP
ret$nuP
nuP <- ret$nuP;lambdaP <- ret$lambdaP
ret <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
maxLLF
library(RJafroc)
mu <- 1;lambda <- 1;nu <- 1
ret <- UtilIntrinsic2PhysicalRSM(mu = 1, lambda = 1, nu = 1)
nuP <- ret$nuP;lambdaP <- ret$lambdaP
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
maxwLLF
maxLLF
maxFPF
mu
lambdaP
nuP
lesDistr
lesWghtDistr
integrate(intwAFROC, 0, maxFPF, mu = mu[i], lambdaP = lambdaP[i], nuP = nuP[i], lesDistr, lesWghtDistr)$value
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
lesDistr
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesWghtDistr
lesWghtDistr[2,3] <- 0.9
aucwAFROC <- aucAFROC <- aucROC <- rep(NA, length(mu))
lesWghtDistr
lesWghtDistr[2,2] <- 0.1
lesWghtDistr[2,3] <- 0.9
lesWghtDistr
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
library(RJafroc)
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
library(RJafroc)
relWeights <- c(0.1, 0.9)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
x
library(RJafroc)
relWeights <- c(0.1, 0.9)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
x
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
lesWghtDistr
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
relWeights
relWeights
lesWghtDistr
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
2:(lesDistr[i,1]+1
)
2:(lesDistr[i,1]+1)
relWeights[i]
2:(lesDistr[i,1]+1)
(2:(lesDistr[i,1]+1))-1
relWeights[(2:(lesDistr[i,1]+1))-1]
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
relWeights[(2:(lesDistr[i,1]+1))-1]
library(RJafroc)
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
lesWghtDistr
x <- UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights = 0)
library(RJafroc)
UtilSpecifyLesionWeightsDistr <- function (maxLL = 3, relWeights = c(0.1, 0.5, 0.4))
UtilSpecifyLesionWeightsDistr (maxLL = 3, relWeights = c(0.1, 0.5, 0.4))
UtilSpecifyLesionWeightsDistr (maxLL = 3, relWeights = c(0.1, 0.5, 0.4))
relWeights[(2:(lesDistr[i,1]+1))-1] / sum(relWeights[(2:(lesDistr[i,1]+1))-1])
relWeights[(2:(lesDistr[i,1]+1))-1] / sum(relWeights[(2:(lesDistr[i,1]+1))-1])
lesWghtDistr
2:(lesDistr[i,1]+1)
lesDistr
lesDistr
lesWghtDistr
lesDistr
UtilLesionDistr (dataset01)
library(RJafroc)
specifiedLesDistr <- c(0.1, 0.2, 0, 0.7)
relWeights <- c(0.2, 0.4, 0.1, 0.3)
UtilSpecifyLesionWeightsDistr(specifiedLesDistr, relWeights)
specifiedLesDistr
relWeights
lesWghtDistr
lesWghtDistr
UtilSpecifyLesionWeightsDistr(specifiedLesDistr, relWeights)
specifiedLesDistr[i]+1
i
(2:(i+1))-1
relWeights[(2:(i+1))-1]
sum(relWeights[(2:(i+1))-1])
library(RJafroc)
UtilSpecifyLesionWeightsDistr(specifiedLesDistr, relWeights)
relWeights[(2:(i+1))-1] / sum(relWeights[(2:(i+1))-1])
relWeights[(2:(i+1))-1] / sum(relWeights[(2:(i+1))-1])
relWeights[(2:(i+1))-1] / sum(relWeights[(2:(i+1))-1])
relWeights[(2:(i+1))-1] / sum(relWeights[(2:(i+1))-1])
UtilSpecifyLesionWeightsDistr(specifiedLesDistr, relWeights)
library(RJafroc)
library(RJafroc)
UtilSpecifyLesionWeightsDistr(specifiedLesDistr, relWeights)
library(RJafroc)
library(RJafroc)
library(devtools)
devtools::check()
devtools::test()
devtools::test()
library(RJafroc)
library(RJafroc)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
lesDistr
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
lesDistr
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
lesDistr
sum(lesDistr[1,])
sum(lesDistr[,2])
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
lesDistr
lesDistr
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
ret <- Compare3ProperRocFits(1,2,reAnalyze = TRUE)
specifiedLesDistr <- c(0.1, 0.2, 0, 0.7)
specifiedLesDistr
str(specifiedLesDistr)
t(specifiedLesDistr)
specifiedLesDistr <- c(0.1, 0.2, 0, 0.7)
specifiedLesDistr
rbind.data.frame(specifiedLesDistr, c(1, 2, 3, 4))
rbind.data.frame(c(1, 2, 3, 4), specifiedLesDistr)
x <- rbind.data.frame(c(1, 2, 3, 4), specifiedLesDistr)
x
t(x)
x <- t(x)
x
rownames(x) <- NULL
x
UtilLesionWeightsDistr(dataset01)
UtilLesionDistr(dataset01)
specifiedLesDistr <- c(0.1, 0.2, 0, 0.7)
rbind(seq(1:length(specifiedLesDistr)), specifiedLesDistr)
x <- rbind(seq(1:length(specifiedLesDistr)), specifiedLesDistr)
t(x)
x <- t(x)
x
rownames(x) <- NULL
x
colnames(x) <- NULL
x
library(RJafroc)
library(RJafroc)
mu <- 1;lambda <- 1;nu <- 1
ret <- UtilIntrinsic2PhysicalRSM(mu = 1, lambda = 1, nu = 1)
nuP <- ret$nuP;lambdaP <- ret$lambdaP
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
aucROC
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
maxwLLF
lesWghtDistr
specified1DLesDistr
relWeights
lesWghtDistr
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
specified1DLesDistr
library(RJafroc)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
specified1DLesDistr
specified1DLesDistr[i]
specified1DLesDistr
2:(i+1)
specified1DLesDistr[i]
1/i
library(RJafroc)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesWghtDistr
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
maxLLF
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr)
lesDistr
y <- Compare3ProperRocFits(1,1,reAnalyze = TRUE)
devtools::test()
devtools::test()
library(RJafroc)
library(RJafroc)
Convert2lesDistr(c(0.1, 0.9))
Convert2lesDistr(c(0.1, 0.8, 0.1))
mu <- 1;lambda <- 1;nu <- 1
ret <- UtilIntrinsic2PhysicalRSM(mu = 1, lambda = 1, nu = 1)
nuP <- ret$nuP;lambdaP <- ret$lambdaP
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
relWeights <- c(0.05, 0.95)
UtilAnalyticalAucsRSM(mu, lambdaP, nuP, lesDistr, relWeights)
pkgdown::build_site()
library(RJafroc)
?`RJafroc-package`
library(RJafroc)
mu <- 1;lambda <- 1;nu <- 1
lesDistr <- rbind(c(1, 0.9), c(2, 0.1))
UtilAnalyticalAucsRSM(mu, lambda, nu, lesDistr)
Q
Q
Q
library(RJafroc)
UtilAnalyticalAucsRSM(mu, lambda, nu, lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, lesDistr)
lambdaP
zeta1
UtilAnalyticalAucsRSM(mu, lambda, nu, -1, lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = -1, les lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = -1, lesDistr = lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = 1, lesDistr = lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = 2, lesDistr = lesDistr)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = -2, lesDistr = lesDistr)
library(RJafroc)
devtools::test()
devtools::test()
library(RJafroc)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = 0, lesDistr, relWeights)
relWeights <- c(0.05, 0.95)
relWeights <- c(0.05, 0.95)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = 0, lesDistr, relWeights)
UtilAnalyticalAucsRSM(mu, lambda, nu, zeta1 = 2, lesDistr, relWeights)
library(RJafroc)
pkgdown::build_site()
pkgdown::build_site()
