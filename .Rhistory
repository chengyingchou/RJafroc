<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
dt <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
dt %>% kable() %>% kable_styling()
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
dt <- rbind(dt, temp)
dt %>% kable() %>% kable_styling()
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
str(dt)
str(temp)
dt <- rbind(dt, temp)
str(dt)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(kableExtra)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
dt <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
dt %>% kable() %>% kable_styling()
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
dt <- rbind(dt, temp)
dt %>% kable() %>% kable_styling()
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
dt <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(dt) <- rowNames
dt %>% kable() %>% kable_styling()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(kableExtra)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
dt <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
dt %>% kable() %>% kable_styling()
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
dt <- rbind(dt, temp)
dt %>% kable() %>% kable_styling()
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
dt <- rbind(dt, temp)
dt %>% kable() %>% kable_styling()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(kableExtra)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
myTab <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(myTab) <- rowNames
kable(myTab)
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
kable(myTab)
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
kable(myTab)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
y
ndf <- c(1,2,5,10,12,15,20)
for (i in 1:length(ndf)) {cat("ndf = ", ndf[i], "fCrit = ", qf(0.05, ndf[i], 100))}
for (i in 1:length(ndf)) {cat("ndf = ", ndf[i], "fCrit = ", qf(0.05, ndf[i], 100), "\n")}
for (i in 1:length(ndf)) {cat("ndf = ", ndf[i], "fCrit = ", qf(1-alpha, ndf[i], 100), "\n")}
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7),
fCrit = qf(1-alpha, ndf[i], 100))
myTab
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7),
fCrit = qf(1-alpha, ndf, 100))
myTab
ndf <- c(1,2,5,10,12,15,20)
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7),
+                     fCrit = qf(1-alpha, ndf, 100))
ndf <- c(1,2,5,10,12,15,20)
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7),
+                     fCrit = qf(1-alpha, ndf, 100))
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7),
+                     fCrit = qf(1-alpha, ndf[i], 100))
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7), fCrit = qf(1-alpha, ndf[i], 100))
ndf <- c(1,2,5,10,12,15,20)
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7), fCrit = qf(1-alpha, ndf, 100))
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
CI
stdErr
library(RJafroc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(kableExtra)
ndf <- 2;ddf <- 10;ncp <- c(0,2,5,10)
alpha <- 0.05
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("A", "B", "C", "D")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_10 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(1, 4)]
myTab <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(myTab) <- rowNames
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- 2;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("E", "F", "G", "H")
myLabelIndx <- 1
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_2_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(5, 8)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- 1;ddf <- 100
fCrit <- qf(1-alpha, ndf,ddf)
x <- seq(1, 20, 0.1)
myLabel <- c("I", "J", "K", "L")
pFgtFCrit <- NULL
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
pFgtFCrit <- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i]))
}
myLabelIndx <- 1
for (i in 1:length(ncp))
{
y <- df(x,ndf,ddf,ncp=ncp[i])
curveData <- data.frame(x = x, pdf = y)
curvePlot <- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) +
geom_line() +
ggtitle(myLabel[myLabelIndx]);myLabelIndx <- myLabelIndx + 1
print(curvePlot)
}
fCrit_1_100 <- fCrit # convention fCrit_ndf_ddf
rowNames <- LETTERS[seq(9, 12)]
temp <- data.frame(ndf = rep(ndf, 4), ddf = rep(ddf, 4),
fCrit = rep(fCrit, 4), ncp = ncp,
pFgtFCrit = pFgtFCrit)
row.names(temp) <- rowNames
myTab <- rbind(myTab, temp)
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ndf <- c(1,2,5,10,12,15,20)
myTab <- data.frame(ndf = ndf, ddf = rep(100, 7), fCrit = qf(1-alpha, ndf, 100))
myTab %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(RJafroc)
StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
qt(0.975, Inf)
pnorm(0.975)
pnorm(0.975, lower.tail = F)
pnorm(0.975, lower.tail = T)
qnorm(0.975)
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
<<<<<<< HEAD
<<<<<<< HEAD
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
FRRC
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ANOVA$IndividualRdr[,3:4]
FRRC$IndividualRdrVarCov1
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ANOVA$IndividualRdr
ci
library(devtools)
devtools::test()
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
st
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
library(RJafroc)
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
ci
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
FRRC$FTests
FRRC
st <- StSignificanceTesting(dataset02,FOM = "Wilcoxon", method = "OR")
RRFC$FTests
diffTRName
CI
den
trtMeanDiffs
library(RJafroc)
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
=======
>>>>>>> parent of 6a3c7a2... Commented StORSummaryRRFC and RRRC
