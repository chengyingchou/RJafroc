ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds$NL[1,1,6:8,1]
ds$LL[1,1,,1]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
NLModalityID
modalityID
LLReaderID
NLReaderID
NLModalityID
LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
LLRating[1,1,,1]
any(LLRating == UNINITIALIZED)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
modalityID
readerID
sum(k)
retLL$LLModalityID
retLL$LLModalityID
retLL$LLReaderID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
abnormalCases
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
retTruth$lesionIDLabels
retTruth$LLLesionID[k]
retTruth$LLLesionIDLabels
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
IDs
which(IDs[k1] == abnormalCases)
LLCaseID[k]
LLCaseID
LLCaseID[k]
IDs[k1]
IDs[k1] == abnormalCases
which(IDs[k1] == abnormalCases)
which(LLLesionID[k][x2][el] == x3)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
el
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/Truth/Ok.xlsx")
x5
k
[x5][el]
LLRating[k][x5][el]
LLRating[k]
LLRating[k][x5]
LLRating[k][x5][el]
x1
x4
k
k1
k1
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
names(modalityID)
modalityNames
readerNames
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx", renumber = TRUE)
modalityID
modalityID
readerID
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx", sequentialNames = TRUE)
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx", renumber = TRUE)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(testthat)
expect_equal(ds, ds1)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
LLRating[k][x5][el]
LL[i, j, x1, x4]
LL[i, j, x1, x4]
LLRating[k][x5][1]
x1
x4
x3
which(IDs[k1] == abnormalCases
)
lesionIDLabels
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
lesionIDLabels
x5
x3
IDs[k1]
abnormalCases
lesionIDLabels
retTruth$lesionIDLabels
retTruth$lesionIDLabels
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds, ds1)
any(is.na(LL))
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
lesionIDLabels
is.na(NL)
IDs
LLLesionID[k][x2][el] == x3
LL
LL[1,1,1,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
LL[1,1,,]
LL[1,1,1,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/includedRocData.xlsx")
LL[1,1,,]
ds$LL[1,1,,]
str(ds$LL)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds$LL[1,1,,]
ds1$LL[1,1,,]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
x2
caseLLTable
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
x2
caseLLTable
LLCaseID
caseLLTable
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
LLCaseID
IDs
LLCaseID[k] == IDs[k1]
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
IDs
caseLLTable
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
IDs
ds1 <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
IDs
caseLLTable
LLCaseID
k
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
k
LLReaderID
retLL$LLReaderID
readerID
retLL$LLReaderID == readerID[j]
retLL$LLModalityID == modalityID[i]
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
LLReaderID == readerID[j]
readerID[j]
LLReaderID
readerID[j]
LLReaderID
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
retLL$LLReaderID
readerID[j]
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
LLReaderID
library(RJafroc)
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
retLL$LLReaderID
readerID[j]
LLRating[k][x5][el]
caseLLTable[k1]
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds, ds1)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
lesionVector
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
lesionVector
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
naLines
lesionVector
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
lesionVector
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds,ds1)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds,ds1)
library(RJafroc)
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds,ds1)
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds,ds1)
library(RJafroc)
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/Ok.xlsx")
expect_equal(ds,ds1)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/Ok.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/Ok.xlsx")
expect_equal(ds,ds1)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/duplicatedRow.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/duplicatedRow.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/incorrectWeights.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/incorrectWeights.xlsx")
cat("hi there \n")
cat("hi there \n"); cat("hi no\n")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/incorrectWeights.xlsx")
library(RJafroc)
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/incorrectWeights.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing1CellRow5.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing1CellRow5.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
errorMsg
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
errorMsg
is.na(TruthTable)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
errorMsg
errorMsg
errorMsg
any(is.na(TruthTable[, i]))
is.na(TruthTable[, i])
TruthTable[, i]
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
TruthTable[, i]
is.na(TruthTable[, i])
any(is.na(TruthTable[, i]))
errorMsg
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
library(RJafroc)
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missing2CellsRow5and7.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missingEntireRow.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missingEntireRow5.xlsx")
ds1 <- DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missingEntireRow5.xlsx")
TruthTable[, 3]
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/missingEntireRow5.xlsx")
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-integerCaseID.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-integerCaseID.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-integerLesionID.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-integerLesionID.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/non-numeric-weight.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseeIDs.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
Truth_CaseIDColumn == LLCaseID[i]
LLCaseID
LLCaseID %in% retTruth$abnormalCases
all(LLCaseID %in% retTruth$abnormalCases)
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
all(LLCaseID %in% retTruth$abnormalCases)
if (!all(LLCaseID %in% retTruth$abnormalCases)) stop("Check LL/TP sheet for non-diseased cases\n")
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDs.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInTP.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
TruthTable
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
TruthTable
read.xlsx(fileName, truthFileIndex, cols = 6)
read.xlsx(fileName, truthFileIndex, cols = 5)
library(openxlsx)
TruthTable <- read.xlsx(fileName, truthFileIndex, cols = 1:6, skipEmptyRows = FALSE)
TruthTable
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
TruthTable
TruthTable <- read.xlsx(fileName, truthFileIndex, cols = 1:7, skipEmptyRows = FALSE)
TruthTable <- read.xlsx(fileName, truthFileIndex, cols = 1:7, skipEmptyRows = FALSE)
TruthTable
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
TruthTable
TruthTable <- read.xlsx(fileName, truthFileIndex, cols = 1:7, skipEmptyRows = FALSE)
read.xlsx(fileName, truthFileIndex, rows = 2, cols = 6)
read.xlsx(fileName, truthFileIndex, rows = 1, cols = 6)
read.xlsx(fileName, truthFileIndex, rows = 1, cols = 5)
read.xlsx(fileName, truthFileIndex, rows = 2, cols = 5)
read.xlsx(fileName, truthFileIndex, rows = 1, cols = 6)
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
read.xlsx(fileName, truthFileIndex, cols = 1:6, skipEmptyRows = FALSE)
read.xlsx(fileName, sheet = truthFileIndex, cols = 1:6, skipEmptyRows = FALSE)
read.xlsx(fileName, sheet = truthFileIndex, cols = 6, skipEmptyRows = FALSE)
library(RJafroc)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/incorrectCaseIDsInFP.xlsx")
TruthTable
read.xlsx(fileName, truthFileIndex, cols = NULL)
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
TruthTable
DfReadDataFile1("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
truthFileIndex
TruthTable
TruthTable[,6]
paradigm <- TruthTable[,6][which(!is.na(TruthTable[,6]))]
paradigm <- TruthTable[,6][which(!is.na(TruthTable[,6]))]
design <- TruthTable[,7][which(!is.na(TruthTable[,7]))]
paradigm <- toupper(TruthTable[,6][which(!is.na(TruthTable[,6]))])
if (paradigm %in% c("FROC", "ROC")) stop("Unsupported paradigm\n")
design <- toupper(TruthTable[,7][which(!is.na(TruthTable[,7]))])
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
truthTable
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
paradigm
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
lesionWeight
lesionWeight
lesionWeight[k2, lesionWeight[k2, ] != UNINITIALIZED]
sum(lesionWeight[k2, lesionWeight[k2, ] != UNINITIALIZED])
1/lesionVector[k2]
as.numeric(c(weights[k][order(lesionID[k])], rep(UNINITIALIZED, max(lesionVector) - length(k))))
library(RJafroc)
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
sumWeight
library(RJafroc)
DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
dsOld <- DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
dsNew <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
expect_equal(dsOld, dsNew)
fileName <- system.file(
"extdata", "/toyFiles/ROC/OK.xlsx", package = "RJafroc", mustWork = TRUE)
fileName
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/OK.xlsx", ".rds")
fn
!file.exists(fn)
DfReadDataFile(fileName)
dsNew <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/ROC/OK.xlsx", package = "RJafroc", mustWork = TRUE)
DfReadDataFile(fileName)
library(testthat)
fileName <- system.file(
"extdata", "/toyFiles/FROC/OK.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/OK.xlsx", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName), ds)
dsNew <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
library(RJafroc)
dsNew <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/FROC/OK.xlsx")
design
paradigm
library(RJafroc)
dsNew <- DfReadDataFile("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/OK.xlsx")
dsOld <- DfReadDataFileOld("~/GitHub/RJafroc/inst/extdata/toyFiles/ROC/OK.xlsx")
library(testthat)
expect_equal(dsNew, dsOld)
library(RJafroc)
devtools::check()
library(RJafroc)
library(RJafroc)
devtools::check()
library(RJafroc)
devtools::check()
library(RJafroc)
devtools::check()
devtools::check(--run-donttest)
devtools::check(run_dont_test)
devtools::check(run_dont_test =  TRUE)
library(RJafroc)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
retCrossed2 <- StSignificanceTestingCrossedModalities(datasetCrossedModality, 1)
crossedData <- DfReadCrossedModalities(crossedFileName)
dsc <- datasetCrossedModality
load("~/GitHub/RJafroc/data/datasetCrossedModality.RData")
datasetCrossedModality <- crossedData
save(list = "datasetCrossedModality", file = "~/GitHub/RJafroc/data/datasetCrossedModality.RData")
load("~/GitHub/RJafroc/data/datasetCrossedModality.RData")
View(datasetCrossedModality)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
retCrossed2 <- StSignificanceTestingCrossedModalities(datasetCrossedModality, 1)
dsc <- datasetCrossedModality
load("~/GitHub/RJafroc/data/datasetCrossedModality.RData")
View(datasetCrossedModality)
save(datasetCrossedModality, file = "~/GitHub/RJafroc/data/datasetCrossedModality.RData")
load("~/GitHub/RJafroc/data/datasetCrossedModality.RData")
View(datasetCrossedModality)
retCrossed2 <- StSignificanceTestingCrossedModalities(datasetCrossedModality, 1)
## read the raw data file in extdata directory
crossedFileName <- system.file("extdata", "CrossedModalitiesData.xlsx",
package = "RJafroc", mustWork = TRUE)
crossedData <- DfReadCrossedModalities(crossedFileName)
retCrossed1 <- StSignificanceTestingCrossedModalities(crossedData, 1)
## read the built in dataset
retCrossed2 <- StSignificanceTestingCrossedModalities(datasetCrossedModality, 1)
library(testthat)
expect_equal(crossedData, datasetCrossedModality)
devtools::check(run_dont_test =  TRUE)
