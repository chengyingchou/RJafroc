seq(1, 11 + max(I, J))
addStyle(wb,  sheet = "Summary", style = sty, rows = seq(1, 11 + max(I, J)), cols = 1:4)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
colnames
fomArray
writeData(wb, sheet = "FOMs", x = fomArray, rowNames = TRUE, colNames = TRUE)
saveWorkbook(wb, "writeDataExample.xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
J
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
diffTRName
diffTable
testTable
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
diffTable
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
ReportFileName
overwrite
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
13 + nrow(diffTable) + nrow(ciTable)
ciTable
diffTable
diffTableEchR
10 + nrow(diffTable) + nrow(ciTable) + nrow(diffTableEchR)
11 + nrow(diffTable) + nrow(ciTable) + nrow(diffTableEchR)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset07, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
load("~/rjafroc-master/data/dataset07.RData")
UtilOutputReport(dataset = dataset08, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset08, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
fomArray
library(RJafroc)
UtilOutputReport(dataset = dataset08, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset08, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
!missing(DataFileName)
missing(DataFileFormat)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
missing(DateFileFormat)
missing(DateFileName)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
missing(DataFileName)
missing(DataFileFormat)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "MRMC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
fn
UtilOutputReport(DataFileName = fn, DataFileFormat = "MRMC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
DataFileName
UtilOutputReport(DataFileName = fn, DataFileFormat = "MRMC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "MRMC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
delimiter
renumber
DataFileFormat
UtilOutputReport(DataFileName = fn, DataFileFormat = "MRMC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
DataFileName
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
file_ext("temp/123.ext")
DataFileName
(!missing(DataFileName) && !(file_ext(DataFileName) %in% c("xls", "xlsx", "txt")))
library(RJafroc)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
DataFileName
file_ext(DataFileName) %in% c("xls", "xlsx")
file_ext(DataFileFormat) %in% c("txt")
DataFileFormat
file_ext(DataFileName) == "txt"
DataFileFormat
!missing(DataFileName) && (file_ext(DataFileName) == "txt") &&  (DataFileFormat ==  "JAFROC")
library(RJafroc)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE, ReportFileFormat = "xlsx")
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE, ReportFileFormat = "xlsx")
ReportFileName
datasetSpecified
basename(DataFileName)
library(RJafroc)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE, ReportFileFormat = "xlsx")
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData",ReportFileFormat = "xlsx", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData1", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData2",ReportFileFormat = "xlsx", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData3", overwrite = TRUE)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon",
dataDescription = "MyROCData4",ReportFileFormat = "xlsx", overwrite = TRUE)
fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH", FOM = "Wilcoxon",
overwrite = TRUE, ReportFileFormat = "xlsx")
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon", overwrite = TRUE)
missing(dataset)
!missing(DataFileName)
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon", overwrite = TRUE)
ReportFileName
datasetSpecified
getwd()
dataDescription
deparse(substitute(dataset))
substitute(dataset)
dataDescription
library(RJafroc)
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon", overwrite = TRUE)
ReportFileName
UtilOutputReport(dataset = dataset02, method = "ORH", FOM = "Wilcoxon", overwrite = TRUE)
UtilOutputReport(dataset = dataset05, method = "DBMH", FOM = "Wilcoxon")
library(RJafroc)
UtilOutputReport(dataset = dataset05, method = "ORH")
UtilOutputReport(dataset = dataset05, method = "DBMH", FOM = "HrAuc")
UtilOutputReport(dataset = dataset05, method = "DBMH", FOM = "HrAuc", ReportFileFormat = "xlsx")
library(RJafroc)
UtilOutputReport(dataset = dataset03, method = "DBMH", FOM = "HrAuc", ReportFileFormat = "xlsx")
library(RJafroc)
UtilOutputReport(dataset = dataset03, method = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData1", overwrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset = dataset03, stMethod = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData0", overwrite = TRUE)
library(RJafroc)
install.packages("openxlsx")
install.packages("devtools")
library(RJafroc)
UtilOutputReport(dataset = dataset03, stMethod = "DBMH", FOM = "Wilcoxon",
dataDescription = "MyROCData0", overwrite = TRUE)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:xlsx", unload=TRUE)
remove.packages("xlsx")
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:xlsxjars", unload=TRUE)
remove.packages("xlsxjars")
remove.packages("rJava")
install.packages("assertthat")
library(RJafroc)
remove.packages("assertthat")
install.packages("assertthat")
library(RJafroc)
dataset <- DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(4,7))
ret <- FitCorCbm(dataset)
print(ret$fitCorCbmRet)
print(ret$stats)
print(ret$fittedPlot)
load("~/rjafroc-master/inst/extdata/binnedData123")
save(binnedData123, file = "~/rjafroc-master/data/binnedData123.RData")
load("~/rjafroc-master/inst/extdata/binnedData124")
save(binnedData124, file = "~/rjafroc-master/data/binnedData124.RData")
load("~/rjafroc-master/inst/extdata/binnedData125")
save(binnedData125, file = "~/rjafroc-master/data/binnedData125.RData")
load("~/rjafroc-master/data/binnedData123.RData")
load("~/rjafroc-master/inst/extdata/binnedData123")
str(binnedData123)
library(RJafroc)
str(binnedData125)
library(RJafroc)
ret <- FitCorCbm(binnedData123)
print(ret$fitCorCbmRet)
print(ret$stats)
print(ret$fittedPlot)
library(RJafroc)
source("real_roots.R")
setwd("~/rjafroc-master/tests/testthat")
source("real_roots.R")
setwd("~/rjafroc-master")
test_dir(".")
testthat::test_dir(",")
testthat::test_dir(".")
source("real_roots.R")
getwd()
source('~/rjafroc-master/tests/testthat.R')
library(RJafroc)
testthat::test_dir(".")
test_that("Distinct roots", {
roots <- real.roots(1, 7, 12)
expect_equal( roots, is_a("numeric") )
expect_that( length(roots), equals(2) )
expect_that( roots[1] < roots[2], is_true() )
})
roots <- real.roots(1, 7, 12)
roots
expect_that( length(roots), equals(2) )
expect_equal( roots, is_a("numeric") )
expect_equal( length(roots), 2 )
expect_lt( roots[1] , roots[2])
expect_equal( length(roots), 2 )
roots <- real.roots(1, 7, 12)
expect_equal( length(roots), 2 )
expect_lt( roots[1] , roots[2])
is_a("numeric")
str(roots)
is_scalar_list(roots)
is.numeric(roots)
expect_true( is.numeric(roots) )
roots <- real.roots(1, 6000, 9000000)
expect_equal( length(roots), 1)
expect_equal( roots, -3000)
roots <- real.roots(1, 7, 12)
expect_length( roots, 2 )
roots <- real.roots(1, 6000, 9000000)
expect_equal( length(roots), 1)
expect_equal( roots, -3000)
# Test whether ABSOLUTE error is within 0.1
expect_that( roots, equals(-3000.01, tolerance  = 0.1) )
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3000.01, tolerance  = 0.1)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3001, tolerance  = 0.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3001, tolerance  = 0.1, scale=-3011)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3001, tolerance  = 1.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3101, tolerance  = 0.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3001, tolerance  = 0.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3001, tolerance  = 0.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3101, tolerance  = 0.1, scale=-3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3101, tolerance  = 0.1, scale=3001)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3901, tolerance  = 0.1, scale=-3000)
# Test whether RELATIVE error is within 0.1
# To test relative error, set 'scale' equal to expected value.
# See base R function all.equal for optional argument documentation.
expect_equal( roots, -3901, tolerance  = 0.01, scale=-3000)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -9900.01, tolerance  = 0.1)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3900.01, tolerance  = 0.1)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.1)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.1)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.1)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.01)
expect_equal( roots, -3000)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.01)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.1)
expect_equal( length(roots), 1)
expect_equal( roots, -3000)
# Test whether ABSOLUTE error is within 0.1
expect_equal( roots, -3100.01, tolerance  = 0.1)
library(RJafroc)
devtools::test()
db <- Rd_db("base")
Fibonacci <- function(n){
a <- 0
b <- 1
for (i in 1:n){
temp <- b
b <- a
a <- a + temp
}
return(a)
}
Fibonacci(5)
Fibonacci(15)
phi <- (1 + sqrt(5))/2
psi <- (1 - sqrt(5))/2
(phi**15 - psi**15)/sqrt(5)
library(RJafroc)
d = b*b - 4*a*c # discriminant
testthat::test_check()
testthat::test_check(".")
testthat::test_package()
testthat::test_package("RJafroc")
library(RJafroc)
ret1M <- StSignificanceTestingCadVsRadiologists (dataset09,
FOM = "Wilcoxon", method = "singleModality")
ret2M <- StSignificanceTestingCadVsRadiologists (dataset09,
FOM = "Wilcoxon", method = "dualModality")
retLroc1M <- StSignificanceTestingCadVsRadiologists (datasetCadLroc,
FOM = "PCL", option = "RRRC", method = "singleModality", FPFValue = 0.05)
retLroc2M <- StSignificanceTestingCadVsRadiologists (datasetCadLroc,
FOM = "PCL", option = "RRRC", method = "dualModality", FPFValue = 0.05)
dataset09a <- DfExtractDataset(dataset09, rdrs = seq(1:7))
ret1M7 <- StSignificanceTestingCadVsRadiologists (dataset09a,
FOM = "Wilcoxon", method = "singleModality")
ret2M7 <- StSignificanceTestingCadVsRadiologists (dataset09a,
FOM = "Wilcoxon", method = "dualModality")
datasetCadLroc7 <- DfExtractDataset(datasetCadLroc, rdrs = seq(1:7))
ret1MLroc7 <- StSignificanceTestingCadVsRadiologists (datasetCadLroc7,
FOM = "PCL", option = "RRRC", method = "singleModality", FPFValue = 0.05)
ret2MLroc7 <- StSignificanceTestingCadVsRadiologists (datasetCadLroc7,
FOM = "PCL", option = "RRRC", method = "dualModality", FPFValue = 0.05)
library(RJafroc)
remove.packages("caTools")
install.packages("caTools")
library(RJafroc)
remove.packages("caTools")
