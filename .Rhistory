tmp, print = TRUE)
})
test_that("DfFroc2Roc", {
tmp <- tempfile()
expect_known_output(
DfFroc2Roc(dataset05),
tmp, print = TRUE)
expect_known_output(
DfFroc2Roc(dataset05),
tmp, print = TRUE)
})
test_that("DfLroc2Roc", {
tmp <- tempfile()
dataset <- DfReadLrocDataFile()
expect_known_output(
DfLroc2Roc(dataset),
tmp, print = TRUE)
expect_known_output(
DfLroc2Roc(dataset),
tmp, print = TRUE)
})
test_that("DfReadCrossedModalities", {
tmp <- tempfile()
crossedFileName <- system.file(
"extdata",
"includedCrossedModalitiesData.xlsx",
package = "RJafroc",
mustWork = TRUE)
expect_known_output(
DfReadCrossedModalities(crossedFileName),
tmp, print = TRUE)
expect_known_output(
DfReadCrossedModalities(crossedFileName),
tmp, print = TRUE)
})
test_that("DfReadDataFile MRMC", {
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRocData.csv", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "MRMC"),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "MRMC"),
tmp, print = TRUE)
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRocData.lrc", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "MRMC"),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "MRMC"),
tmp, print = TRUE)
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRocData.imrmc", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "iMRMC"),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName, format = "iMRMC"),
tmp, print = TRUE)
})
test_that("DfReadDataFile JAFROC", {
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRocData.xlsx", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName),
tmp, print = TRUE)
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedFrocData.xlsx", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName, renumber = TRUE),
tmp, print = TRUE)
})
test_that("DfReadDataFile JAFROC", {
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRocData.xlsx", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName),
tmp, print = TRUE)
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedFrocData.xlsx", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName, renumber = TRUE),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName, renumber = TRUE),
tmp, print = TRUE)
})
test_that("DfReadDataFile ROI dataset", {
tmp <- tempfile()
fileName <- system.file(
"extdata", "includedRoiData.xlsx", package = "RJafroc", mustWork = TRUE)
expect_known_output(
DfReadDataFile(fileName),
tmp, print = TRUE)
expect_known_output(
DfReadDataFile(fileName),
tmp, print = TRUE)
ds <- DfReadDataFile(fileName)
expect_equal(ds$dataType, "ROI")
})
test_that("DfExtractDataset", {
tmp <- tempfile()
expect_known_output(
DfExtractDataset(dataset05, rdrs = c(1, 3)),
tmp, print = TRUE)
expect_known_output(
DfExtractDataset(dataset05, rdrs = c(1, 3)),
tmp, print = TRUE)
})
test_that("DfSaveDataFile, all formats, including ROI", {
tmp <- tempfile()
expect_known_output(
DfSaveDataFile(dataset = dataset05, fileName = "rocData2.xlsx", format = "JAFROC"),
tmp, print = TRUE)
expect_known_output(
DfSaveDataFile(dataset = dataset05, fileName = "rocData2.xlsx", format = "JAFROC"),
tmp, print = TRUE)
tmp <- tempfile()
expect_known_output(
DfSaveDataFile(dataset = dataset02, fileName = "rocData2.imrmc", format = "iMRMC"),
tmp, print = TRUE)
expect_known_output(
DfSaveDataFile(dataset = dataset02, fileName = "rocData2.imrmc", format = "iMRMC"),
tmp, print = TRUE)
tmp <- tempfile()
expect_known_output(
DfSaveDataFile(datasetROI, fileName = "roiData.xlsx", format = "JAFROC"),
tmp, print = TRUE)
expect_known_output(
DfSaveDataFile(datasetROI, fileName = "roiData.xlsx", format = "JAFROC"),
tmp, print = TRUE)
})
test_that("DfSaveDataFile", {
tmp <- tempfile()
expect_known_output(
DfSaveDataFile(dataset = dataset02, fileName = "rocData2.csv", format = "MRMC"),
tmp, print = TRUE)
expect_known_output(
DfSaveDataFile(dataset = dataset02, fileName = "rocData2.csv", format = "MRMC"),
tmp, print = TRUE)
tmp <- tempfile()
expect_known_output(
DfSaveDataFile(
dataset = dataset02, fileName = "rocData2.lrc", format = "MRMC"),
tmp, print = TRUE)
expect_known_output(
DfSaveDataFile(
dataset = dataset02, fileName = "rocData2.lrc", format = "MRMC"),
tmp, print = TRUE)
})
source('~/Documents/GitHub/rjafroc-master/tests/testthat/test-data-file.R')
test_that("Compare3ProperRocFits", {
tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1,reAnalyze = TRUE),
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1,reAnalyze = TRUE),
tmp, print = TRUE)
})
source('~/Documents/GitHub/rjafroc-master/tests/testthat/test-compare-3fits.R')
test_that("Compare3ProperRocFits", {
tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1,reAnalyze = FALSE),
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1,reAnalyze = FALSE),
tmp, print = TRUE)
})
tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1),
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1),
tmp, print = TRUE)
test_that("Compare3ProperRocFits", {
tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1),
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
Compare3ProperRocFits(1,1),
tmp, print = TRUE)
})
test_that("Compare3ProperRocFits", {
#   tmp <- tempfile()
#   expect_known_output(
#     Compare3ProperRocFits(1,1),
#     tmp, print = TRUE)
#
# #  tmp <- tempfile()
#   expect_known_output(
#     Compare3ProperRocFits(1,1),
#     tmp, print = TRUE)
})
test_that("DfCreateCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
})
test_that("DfExtractCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
})
test_that("DfExtractCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
})
test_that("DfCreateCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
})
test_that("DfExtractCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
expect_known_output(
DfExtractCorCbmDataset(dataset05, trts = 1, rdrs = c(2,3)),
tmp, print = TRUE)
})
library(RJafroc)
library("testthat")
library("RJafroc")
x <- Compare3ProperRocFits(1,1,re)
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
x$allDatasetsResults[[1][1]]
x$allDatasetsResults[[1]][[1]]
tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]
expect_known_output(
y,
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
y,
tmp, print = TRUE)
test_that("Compare3ProperRocFits", {
tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]
expect_known_output(
y,
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
y,
tmp, print = TRUE)
})
library(RJafroc)
test_that("Compare3ProperRocFits", {
tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]
expect_known_output(
y,
tmp, print = TRUE)
#  tmp <- tempfile()
expect_known_output(
y,
tmp, print = TRUE)
})
y
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]
y$retRsm$mu
tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_known_output(
y,
tmp, print = TRUE)
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y1 <- y
y <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
y
y1
# tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y1 <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_equal(y,y1)
test_that("Compare3ProperRocFits", {
# tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
# expect_known_output(
#   y,
#   tmp, print = TRUE)
# x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
# y1 <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_equal(y,1.781369)
#  tmp <- tempfile()
# expect_known_output(
#   y,
#   tmp, print = TRUE)
})
y
test_that("Compare3ProperRocFits", {
# tmp <- tempfile()
x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
y <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
# expect_known_output(
#   y,
#   tmp, print = TRUE)
# x <- Compare3ProperRocFits(1,1, reAnalyze = TRUE)
# y1 <- x$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_equal(y,1.781369284)
#  tmp <- tempfile()
# expect_known_output(
#   y,
#   tmp, print = TRUE)
})
library(RJafroc)
source('~/Documents/GitHub/rjafroc-master/tests/testthat/test-compare-3fits.R')
test_that("DfCreateCorCbmDataset", {
tmp <- tempfile()
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
expect_known_output(
DfCreateCorCbmDataset(),
tmp, print = TRUE)
})
x <- DfCreateCorCbmDataset()
tempfile("abc", "../..")
tempdir()
tempfile("abc", tmpdir = "../..")
tempfile()
file.create(tempfile("abc", "../.."))
/Users/Dev/Documents/GitHub/rjafroc-master/tests
getwd()
paste0(getwd(),"\tests\testthat")
d <- paste0(getwd(),"\tests\testthat")
tempfile("abc", d)
file.create(tempfile(d)
)
file.create(tempfile(d, tmpdir = d)
)
file.create(tempfile(tmpdir = d))
library(RJafroc)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library("pkgdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
pkgdown::build_site()
devtools::check()
pkgdown::build_site()
library(RJafroc)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library("pkgdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(RJafroc)
library(RJafroc)
pkgdown::build_site()
install.packages(c("knitr", "rmarkdown"))
install.packages("Rcpp")
install.packages(c("testthat", "devtools"))
install.packages("roxygen2")
install.packages(c("bbmle", "binom"))
install.packages(c("dplyr", "ggplot2", "mvtnorm", "openxlsx"))
library(RJafroc)
install.packages("knitr")
install.packages("rmarkdown")
library(RJafroc)
x <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)
View(x)
x$allDatasetsResults
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]
x <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$mu
x <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsmmu
x
x <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsmu
x <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]
x$retRsm
x$retRsm$mu
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
library(RJafroc)
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
library(RJafroc)
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
library(RJafroc)
Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
mtcars[1:10, ]
y <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
tmp <- tempfile()
expect_known_output(y, tmp, print = TRUE)
library(testthat)
expect_known_output(y, tmp, print = TRUE)
tempdir()
getwd()
a <- c(getwd(),"\tests")
a <- paste0(getwd(),"\tests")
a <- paste0(getwd(),"/tests")
a <- paste0(getwd(),"/tests/testthat")
library(RJafroc)
tempdir()
paste0(getwd(),"/tests/testthat")
tempfile(tmpdir = paste0(getwd(),"/tests/testthat"))
tmp <- tempfile(tmpdir = paste0(getwd(),"/tests/testthat"))
library(RJafroc)
tmp <- tempfile(tmpdir = paste0(getwd(),"/tests/testthat"))
library(RJafroc)
tmp <- tempfile(tmpdir = paste0(getwd(),"/tests/testthat"))
y <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_known_output(y, tmp, print = TRUE)
library(testthat)
tmp <- tempfile(tmpdir = paste0(getwd(),"/tests/testthat"))
y <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_known_output(y, tmp, print = TRUE)
y <- Compare3ProperRocFits(1,1,reAnalyze = FALSE)$allDatasetsResults[[1]][[1]]$retRsm$mu
expect_known_output(y, tmp, print = TRUE)
tmp
expect_known_hash(Compare3ProperRocFits(1,1,reAnalyze = FALSE))
library(RJafroc)
testthat::test_file("tests/testthat/test-compare-3fits.R")
library(RJafroc)
testthat::test_file("tests/testthat/test-compare-3fits.R")
testthat::tests()
testthat::test_check()
testthat::test_check('RJafroc')
library(RJafroc)
testthat::test_check('RJafroc')
testthat::test_package('RJafroc')
testthat::test_package("RJafroc")
test_check()
test_check("RJafroc")
testthat::test_check("RJafroc")
testthat::test_file("tests/testthat/test-compare-3fits.R")
StSignificanceTestingCadVsRadiologists (dataset09, FOM = "Wilcoxon", method = "dualModality")
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
warnings()
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
str(zjk1)
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
str(zk1)
str(zk2Cl)
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
zk1
zk2Cl
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
str(dataset)
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
zk1[ zk1 > cutoff ]
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
FPFValue
lroc$FPF
lroc$TPF
lroc$PCL
x <- c(2,2:4,4,4,5,5,7,7,7)
y <- c(1:6, 5:4, 3:1)
amy <- approx(x, y, xout = x)$y
amy1 <- amy
amy2  <- approx(x, y, xout = x, ties = "ordered")$y
amy1
amy2
amy3 <- approx(x, y, xout = x, ties = min)$y
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
PCL
ALroc
library(RJafroc)
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
PCL
ALroc
library(RJafroc)
StSignificanceTestingCadVsRadiologists (datasetCadLroc, FOM = "PCL", method = "singleModality")
library(RJafroc)
x <- UtilFigureOfMerit(datasetROI, FOM = "ROI")
library(RJafroc)
x <- UtilFigureOfMerit(datasetROI, FOM = "ROI")
x <- UtilFigureOfMerit(datasetROI)
x <- UtilFigureOfMerit(datasetROI, FOM = "wAFROC")
UtilFigureOfMerit(dataset01, FOM = "Wilcoxon")
str(dataset01)
str(dataset02)
