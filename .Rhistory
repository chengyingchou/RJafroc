expect_error(StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j]))
} else if ((dataset$dataType == "FROC") && (FOM_arr[i] == "Wilcoxon")) {
# for FROC data, Wilcoxon FOM is NOT allowed
expect_error(StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j]))
} else {
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
if (!file.exists(fn)) {
ret <- StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j])
saveRDS(ret, file = fn)
}
ret <- readRDS(fn);ret <- ret[1:10]
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
expect_equal(ret1, ret)
# end of test
}
dataset <- dataset_arr[[d]]
if ((dataset$dataType == "ROC") && (FOM_arr[i] != "Wilcoxon")) {
# for ROC data, only Wilcoxon FOM is allowed
expect_error(StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j]))
} else if ((dataset$dataType == "FROC") && (FOM_arr[i] == "Wilcoxon")) {
# for FROC data, Wilcoxon FOM is NOT allowed
expect_error(StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j]))
} else {
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
if (!file.exists(fn)) {
ret <- StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j])
saveRDS(ret, file = fn)
}
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
expect_equal(ret1, ret)
# end of test
}
ret <- ret[[-2,-3]]
ret <- ret[c(-2,-3)]
ret1 <- ret1[c(-2,-3)]
expect_equal(ret1, ret)
library(RJafroc)
ret <- StSignificanceTestingCadVsRadiologists(dataset09)
dataset_arr <- list(dataset09, datasetCadLroc, dataset01, dataset02)
dataset_arr_str <- c("dataset09", "datasetCadLroc", "dataset01", "dataset02")
fom_arr <- c("Wilcoxon", "PCL", "ALROC")
method_arr <- c("singleModality", "dualModality")
d <- 1;i <- 1;j <- 1
(dataset$dataType == "ROC") && (fom_arr[i] != "Wilcoxon")
dataset <- dataset_arr[[d]]
(dataset$dataType == "ROC") && (fom_arr[i] != "Wilcoxon")
(dataset$dataType == "ROC") && (fom_arr[i] %in% c("PCL", "ALROC"))
((dataset$dataType == "LROC") && (fom_arr[i] %in% c("Wilcoxon", "ALROC", "PCL")))
(dataset$dataType == "ROC") && (fom_arr[i] != "Wilcoxon")
dataset$dataType == "FROC"
rm(ret)
ret <- StSignificanceTestingCadVsRadiologists (dataset, FOM = fom_arr[i], method = method_arr[j])
dataset_arr <- list(dataset02, dataset05)
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
d <- 1;i <- 1;j <- 1
dataset <- dataset_arr[[d]]
(dataset$dataType == "ROC") && (FOM_arr[i] != "Wilcoxon")
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
library(testthat)
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
fn
!file.exists(fn)
ret <- readRDS(fn)
ret <- ret[c(-2,-3)]
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- ret1[c(-2,-3)]
expect_equal(ret1, ret)
ret$ciAvgRdrEachTrtRRRC$StdErr
ret1$ciAvgRdrEachTrtRRRC$StdErr
attributes(ret$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
x <- cbind(a = 1:3, pi = pi) # simple matrix with dimnames
attributes(x)
x
mostattributes(x) <- list(mycomment = "really special", dim = 3:2,
dimnames = list(LETTERS[1:3], letters[1:5]), names = paste(1:6))
x # dim(), but not {dim}names
x <- cbind(a = 1:3, pi = pi) # simple matrix with dimnames
attributes(x)
attributes(x) <- NULL
x # now just a vector of length 6
mostattributes(x) <- list(mycomment = "really special", dim = 3:2,
dimnames = list(LETTERS[1:3], letters[1:5]), names = paste(1:6))
x # dim(), but not {dim}names
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
stdErrSingleRRRC
attributes(stdErrSingleRRRC)
attributes(ciAvgRdrEachTrtRRRC)
attributes(ciAvgRdrEachTrtRRRC$StdErr)
attributes(stdErrSingleRRRC)
attributes(StdErr)
attributes(ciAvgRdrEachTrtRRRC$StdErr)
str(ciAvgRdrEachTrtRRRC)
str(ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
names(ciDiffTrtRRRC) <- "ciDiffTrtRRRC"
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
+                   fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
names(stdErrSingleRRRC)
names(stdErrSingleRRRC) <- "stdErrSingleRRRC"
ciAvgRdrEachTrtRRRC <- data.frame(Treatment = modalityID, Area = trMeans, StdErr = stdErrSingleRRRC, DF = dfSingleRRRC, CI = CISingleRRRC, row.names = NULL)
colnames(ciAvgRdrEachTrtRRRC) <- c("Treatment", "Area", "StdErr", "DF", "CILower", "CIUpper")
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
names(stdErrSingleRRRC)
names(stdErrSingleRRRC) <- c("stdErrSingleRRRC","stdErrSingleRRRC")
ciAvgRdrEachTrtRRRC <- data.frame(Treatment = modalityID, Area = trMeans, StdErr = stdErrSingleRRRC, DF = dfSingleRRRC, CI = CISingleRRRC, row.names = NULL)
colnames(ciAvgRdrEachTrtRRRC) <- c("Treatment", "Area", "StdErr", "DF", "CILower", "CIUpper")
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
names(stdErrSingleRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
names(stdErrSingleRRRC) <- c("stdErrSingleRRRC1","stdErrSingleRRRC2")
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
length(diffTRMeans)
ddfRRRC
rep(ddfRRRC, choose(I, 2))
rep(stdErrRRRC, choose(I, 2))
diffTRMeans
diffTRName
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
dataset_arr <- list(dataset02, dataset05)
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
d <- 1;i <- 1;j <- 1
dataset <- dataset_arr[[d]]
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str2expression(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
str(ret1$ciAvgRdrEachTrtRRRC)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
stdErrSingleRRRC
dfSingleRRRC
CIRRRC
tPr
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
ret1 <- list(fomArray = fomArray, anovaY = anovaY, anovaYi = msSingleTable, varComp = varComp,
fRRRC = fRRRC, ddfRRRC = ddfRRRC, pRRRC = pRRRC, ciDiffTrtRRRC = ciDiffTrtRRRC, ciAvgRdrEachTrtRRRC = ciAvgRdrEachTrtRRRC)
str(ret1'')
str(ret1)
str(ret1$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$Treatment)
attributes(ret1$ciAvgRdrEachTrtRRRC$Area)
attributes(ret1$ciAvgRdrEachTrtRRRC$DF)
attributes(ret1$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC$StdErr)
attributes(ret1$ciDiffTrtRRRC$t)
attributes(ret1$ciDiffTrtRRRC$CILower)
attributes(ret1$ciDiffTrtRRRC$Treatment)
attributes(ret1$ciDiffTrtRRRC$Estimate)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY)
attributes(anovaY$Source)
attributes(anovaY$SS)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY$SS)
attributes(anovaY$Source)
attributes(anovaY$MS)
attributes(anovaY$df)
attributes(anovaY$DF)
ssArray
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(anovaY$DF)
attributes(anovaY$Source)
attributes(anovaY$MS)
L3 <- LETTERS[1:3]
L3
fac <- sample(L3, 10, replace = TRUE)
fasc
fac
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
(d <- data.frame(x = 1, y = 1:10, fac = fac))
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(anovaY)
x <- 1:10
attributes(x)
attr(x,"dim") <- c(2, 5)
x
attributes(x)
attributes(anovaY)
attributes(anovaY$Source)
attributes(anovaY$SS)
msArray <- c(msT, msR, msC, msTR, msTC, msRC, msTRC)
dfArray <- c(I - 1, J - 1, K - 1, (I - 1) * (J - 1), (I - 1) * (K - 1), (J - 1) * (K - 1), (I - 1) * (J - 1) * (K - 1))
ssArray <- msArray * dfArray;attr(ssArray, "dim") <- length*(ssArray)
msArray <- c(msArray, NA)
dfArray <- c(dfArray, sum(dfArray))
ssArray <- c(ssArray, sum(ssArray))
sourceArray <- c("T", "R", "C", "TR", "TC", "RC", "TRC", "Total")
anovaY <- data.frame(Source = sourceArray, SS = ssArray, DF = dfArray, MS = msArray)
c(5)
msArray <- c(msT, msR, msC, msTR, msTC, msRC, msTRC)
dfArray <- c(I - 1, J - 1, K - 1, (I - 1) * (J - 1), (I - 1) * (K - 1), (J - 1) * (K - 1), (I - 1) * (J - 1) * (K - 1))
ssArray <- msArray * dfArray
ssArray
attributes(ssArray)
names(ssArray) <- "ssArray"
attributes(ssArray)
names(ssArray) <- rep("ssArray",length(ssArray)
)
names(ssArray) <- rep("ssArray",length(ssArray))
attributes(ssArray)
library(RJafroc)
library(testthat)
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
d <- 1
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- readRDS(fn)
attributes(ret$ciAvgRdrEachTrtRRRC$StdErr)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC$CILower)
attributes(ciDiffTrtRRRC$Treatment)
diffTRName
Estimate
diffTRMeans
attributes(diffTRMeans)
CIRRRC
colnames(ciDiffTrtRRRC)
DF
rep(ddfRRRC, choose(I, 2))
diffTRName
diffTRMeans
rep(stdErrRRRC, choose(I, 2))
CIRRRC
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC$Estimate)
attributes(ciDiffTrtRRRC$CILower)
attributes(ciAvgRdrEachTrtRRRC)
devtools::test()
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
CISingleRRRC
str(ciAvgRdrEachTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(ciAvgRdrEachTrtRRRC)
0.988-0.941
0.941-0.894
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciAvgRdrEachTrtRRRC)
attributes(ret1$ciAvgRdrEachTrtRRRC$StdErr)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
attributes(ciDiffTrtRRRC) <- NULL
attributes(ciDiffTrtRRRC)
library(RJafroc)
i
j
d
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ciDiffTrtRRRC)
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
fn
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret)
attributes(ret1)
attributes(ret$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC)
attributes(ret1$fomArray)
attributes(ret$fomArray)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret1$ciDiffTrtRRRC)
attributes(ret$ciDiffTrtRRRC)
str(ret$ciDiffTrtRRRC)
str(ret1$ciDiffTrtRRRC)
library(RJafroc)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
str(ret$ciDiffTrtRRRC)
str(ret1$ciDiffTrtRRRC)
str(ret1$ciAvgRdrEachTrtRRRC)
str(ret$ciAvgRdrEachTrtRRRC)
str(ret$anovaY)
str(ret1$anovaY)
str(ret$anovaYi)
str(ret1$anovaYi)
library(RJafroc)
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret$ciDiffTrtRRRC)
attributes(ret1$ciDiffTrtRRRC)
saveRDS(ret1, file = fn)
d <- 2;i <- 2
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- StSignificanceTesting(dataset, FOM = FOM_arr[i], method = method_arr[j])
saveRDS(ret, file = fn)
library(RJafroc)
d <- 1;i <- 1;fn <- paste0(test_path(), "/goodValues/SigTest/",
dataset_arr_str[d], FOM_arr[i], method_arr[j])
ret <- readRDS(fn)
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
dataset <- dataset_arr[[d]]
ret1 <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
attributes(ret$anovaY)
attributes(ret1$anovaY)
library(RJafroc)
library(devtools)
devtools::check()
library(testthat)
library(devtools)
devtools::check()
version()
R.version
devtools::check_rhub()
devtools::check()
devtools::check_rhub()
library(RJafroc)
setwd("~/RJafroc/R")
setwd("~/RJafroc")
library(RJafroc)
fn <- system.file("extdata", "includedRocData.xlsx",
package = "RJafroc", mustWork = TRUE)
UtilOutputReport(DataFileName = fn, DataFileFormat = "JAFROC", method = "DBMH",
overwrite = TRUE, ReportFileFormat = "xlsx")
devtools::check()
library(testthat)
devtools::check_rhub()
library(devtools)
platforms()
rhub::platforms()
plat <- rhub::platforms()
plat$name
plat$name[16-20]
plat$name[[16-20]]
plat$name[16]
plat$name[16:20]
devtools::check_rhub(platforms = plat$name[16:20])
plat$name[16:20]
plat
plat$name[16]
plat$name[16];plat$description[16]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 10;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 13;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 6;plat$name[val];plat$description[val]
val <- 14;plat$name[val];plat$description[val]
val <- 16;plat$name[val];plat$description[val]
val <- 17;plat$name[val];plat$description[val]
val <- 15;plat$name[val];plat$description[val]
val <- 20;plat$name[val];plat$description[val]
devtools::check_rhub(platforms = plat$name[16])
devtools::check_rhub(platforms = plat$name[11])
devtools::check_rhub(platforms = plat$name[12])
devtools::check_rhub(platforms = plat$name[1])
devtools::check_rhub(platforms = plat$name[2])
devtools::check_rhub(platforms = plat$name[3])
devtools::check_rhub(platforms = plat$name[4])
devtools::check_rhub(platforms = plat$name[5])
devtools::check_rhub(platforms = plat$name[7])
devtools::check_rhub(platforms = plat$name[8])
devtools::check_rhub(platforms = plat$name[9])
devtools::check_rhub(platforms = plat$name[15])
library(devtools)
library(testthat)
devtools::check()
library(RJafroc)
dataset_arr <- list(dataset02, dataset05)
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
d <- 1;i <- 1;j <- 1
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues361/SigTest/", dataset_arr_str[d], FOM_arr[i], method_arr[j], ".rds")
GoodValues <- readRDS(fn)
CurrentValues <- StSignificanceTesting(dataset, FOM = FOM_arr[i],method = method_arr[j])
listMem <- 2;CurrentValues[[listMem]]
listMem <- 2;CurrentValues[[listMem]];GoodValues[[listMem]]
library(devtools)
devtools::check()
revdepcheck::revdep_check()
devtools::revdepcheck::revdep_check()
devtools::revdep()
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[14])
devtools::check_rhub(platforms = plat$name[13])
install_deps(dependencies = TRUE)
devtools::check()
library(RJafroc)
revdepcheck::revdep_check()
library(devtools)
revdepcheck::revdep_check()
install.packages("r-lib")
revdepcheck::revdep_check()
revdep()
revdep("RJafroc")
devtools::build_site()
devtools::release()
library(RJafroc)
library(devtools)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
devtools::check(run_dont_test = TRUE)
devtools::check(run_dont_test = TRUE)
plat <- rhub::platforms()
install.packages("rhub")
plat <- rhub::platforms()
devtools::check_rhub(platforms = plat$name[13])
devtools::check_rhub(platforms = plat$name[13])
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_oldrelease()
library(devtools)
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_devel()
library(devtools)
devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_devel()
library(devtools)
devtools::check_win_devel()
devtools::check(run_dont_test = TRUE)
library(RJafroc)
dataset_arr <- list(dataset02, dataset05) # first is ROC second is FROC dataset object
dataset_arr_str <- c("dataset02", "dataset05")
FOM_arr <- c("Wilcoxon", "HrAuc") #, "wAFROC1","AFROC1","MaxLLF","MaxNLF","MaxNLFAllCases", "ExpTrnsfmSp", "HrSp", "HrSe")
method_arr <- c("DBMH", "ORH")
format_arr <- c("txt", "xlsx")
d <- 1;i <- 1;j <- 1;f <- 1
dataset <- dataset_arr[[d]]
fn <- paste0(test_path(), "/goodValues361/OutputReport/",dataset_arr_str[d],
FOM_arr[i], method_arr[j], format_arr[f])
library(testthat)
fn <- paste0(test_path(), "/goodValues361/OutputReport/",dataset_arr_str[d],
FOM_arr[i], method_arr[j], format_arr[f])
fn
UtilOutputReport(dataset, FOM = FOM_arr[i], method = method_arr[j], ReportFileBaseName = fn, ReportFileExt = format_arr[f], overWrite = TRUE)
library(RJafroc)
UtilOutputReport(dataset, FOM = FOM_arr[i], method = method_arr[j], ReportFileBaseName = fn, ReportFileExt = format_arr[f], overWrite = TRUE)
fn2 <- paste0(test_path(), "/goodValues361/OutputReport/",dataset_arr_str[d],
FOM_arr[i], method_arr[j], "Temp")
fn2
library(devtools)
devtools::check_win_devel()
devtools::check(run_dont_test = TRUE)
