library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
library(RJafroc)
lambda <- 10
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
zk1
zk2Cl
lambda <- 2
zeta1 <- 0
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
zk2Cl
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
nu <- 0.8
zeta1 <- 0
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
zk1
zk2Cl
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
nu <- 0.8
zeta1 <- 0
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
zk1
zk2Cl
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
nu <- 0.8
zeta1 <- 0
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
FPF
PCL
zk1
zk2Cl
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
PCL
ALroc
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
install.packages("pracma")
ALroc <- trapz(tempFpf, tempPcl) # computes trapezoidal area under LROC (0 to FPFValue)
library(pracma)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
ALroc <- trapz(tempFpf, tempPcl) # computes trapezoidal area under LROC (0 to FPFValue)
ALroc
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
PCL
ALroc
tempPcl
FPFValue
PCL
(approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = min))
require(graphics)
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
x <- c(2,2:4,4,4,5,5,7,7,7)
y <- c(1:6, 5:4, 3:1)
(amy <- approx(x, y, xout = x)$y)
op <- options(warn=2)
stopifnot(amy == c(1.5,1.5, 3, 5,5,5, 4.5,4.5, 2,2,2),
ay  == c(2, 2,    3, 6,6,6, 4, 4,    1,1,1))
(ay  <- approx(x, y, xout = x, ties = "ordered")$y)
stopifnot(amy == c(1.5,1.5, 3, 5,5,5, 4.5,4.5, 2,2,2),
ay  == c(2, 2,    3, 6,6,6, 4, 4,    1,1,1))
require(graphics)
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
points(approx(x, y, method = "constant"), col = 4, pch = "*")
f <- approxfun(x, y)
curve(f(x), 0, 11, col = "green2")
points(x, y)
is.function(fc <- approxfun(x, y, method = "const")) # TRUE
curve(fc(x), 0, 10, col = "darkblue", add = TRUE)
## different extrapolation on left and right side :
plot(approxfun(x, y, rule = 2:1), 0, 11,
col = "tomato", add = TRUE, lty = 3, lwd = 2)
par(mar=c(1,1,1,1))
require(graphics)
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
points(approx(x, y, method = "constant"), col = 4, pch = "*")
f <- approxfun(x, y)
curve(f(x), 0, 11, col = "green2")
points(x, y)
is.function(fc <- approxfun(x, y, method = "const")) # TRUE
curve(fc(x), 0, 10, col = "darkblue", add = TRUE)
## different extrapolation on left and right side :
plot(approxfun(x, y, rule = 2:1), 0, 11,
col = "tomato", add = TRUE, lty = 3, lwd = 2)
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
points(approx(x, y, method = "constant"), col = 4, pch = "*")
y
x <- c(2,2:4,4,4,5,5,7,7,7)
y <- c(1:6, 5:4, 3:1)
(amy <- approx(x, y, xout = x)$y) # warning, can be avoided by specifying 'ties=':
op <- options(warn=2) # warnings would be error
stopifnot(identical(amy, approx(x, y, xout = x, ties=mean)$y))
options(op) # revert
(ay  <- approx(x, y, xout = x, ties = "ordered")$y)
stopifnot(amy == c(1.5,1.5, 3, 5,5,5, 4.5,4.5, 2,2,2),
ay  == c(2, 2,    3, 6,6,6, 4, 4,    1,1,1))
approx(x, y, xout = x, ties = min)$y
approx(x, y, xout = x, ties = max)$y
x
y
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
tempFpf
tempPcl
library(RJafroc)
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
nu <- 0.8
zeta1 <- 0
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
lesionVector <- rep(1, 5)
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
nu <- 0.8
zeta1 <- 0
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
FPF
PCL
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
library(pracma)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
tempFpf
FPFValue
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
tempPcl
PCL
lroc
approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = max))
approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = max)
par(mar=c(1,1,1,1))
approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = min
)
install.packages("interp")
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
interp::in(lroc$FPF, lroc$PCL, x0 = 0.1)
interp::interp(lroc$FPF, lroc$PCL, x0 = 0.1)
interp::interp(lroc$FPF, lroc$PCL, xo = 0.1)
interp::interp(lroc$FPF, lroc$PCL, xO = 0.1)
interp::interp(lroc$FPF, lroc$PCL, xO = 0.1, output = "points")
interp::interp(x = lroc$FPF, y = lroc$PCL, xO = 0.1, output = "points")
interp::interp(x = lroc$FPF, y = lroc$PCL, xo = 0.1, output = "points")
install.packages("akima")
akima::interp(x = lroc$FPF, y = lroc$PCL, xo = 0.1, output = "points")
library(akima)
detach("package:base", unload = TRUE)
remove.packages("akima")
library(base)
approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = max)
approx(lroc$FPF, lroc$PCL, xout = 0.1, ties = max)
approx(lroc$FPF, lroc$PCL, xout = 0.05, ties = max)
interp1(lroc$FPF, lroc$PCL, xout = 0.1)
interp1(lroc$FPF, lroc$PCL, xi = 0.1)
interp1(lroc$FPF, lroc$PCL, xi = 0.0.05)
interp1(lroc$FPF, lroc$PCL, xi = 0.05)
interp1(lroc$FPF, lroc$PCL, xi = 0.05, method = "constant")
interp1(lroc$FPF, lroc$PCL, xi = 0.1, method = "constant")
lroc
interp1(lroc$FPF, lroc$PCL, xi = 0.1, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.2, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.4, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 1, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.8, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.6, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.4, method = "nearest")
approx(lroc$FPF, lroc$PCL, xout = FPFValue, ties = max)
approx(lroc$FPF, lroc$PCL, xout = 0.05, ties = max)
lroc$FPF
lroc$FPF > FPFValue
lroc$FPF[lroc$FPF > FPFValue]
lroc$FPF[lroc$FPF > FPFValue][1]
lroc$FPF[lroc$FPF < FPFValue]
interp1(lroc$FPF, lroc$PCL, xi = 0.1, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.05, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.01, method = "nearest")
interp1(lroc$FPF, lroc$PCL, xi = 0.01, method = "constant")
interp1(lroc$FPF, lroc$PCL, xi = 0.01, method = "linear")
interp1(lroc$FPF, lroc$PCL, xi = 0.01, method = "spline")
interp1(lroc$FPF, lroc$PCL, xi = 0.05, method = "spline")
interp1(lroc$FPF, lroc$PCL, xi = 0.2, method = "spline")
lroc$FPF[lroc$FPF >= FPFValue][1]
FPFValue
library(akima)
install.packages("akima")
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
lroc$FPF
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
tempPcl <-c(lroc$PCL[lroc$PCL < PCL],PCL)
tempPcl
tempFpf
tempPcl <-c(lroc$PCL[lroc$FPF < FPFValue],PCL)
tempPcl
lroc$FPF[lroc$FPF < FPFValue]
lroc$PCL[lroc$FPF < FPFValue]
FPFValue
lroc$PCL[lroc$FPF < FPFValue]
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
lowerX
upperX
lroc$FPF > x
lroc$FPF
library(RJafroc)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
tempFpf
tempPcl
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.5)
library(RJafroc)
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
lesionVector <- rep(1, 5)
nu <- 0.8
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.5)
zk1
zk2Cl
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.5)
FPF
PCL
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
set.seed(2)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 2
lesionVector <- rep(1, 5)
nu <- 0.5
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
zk1
zk2Cl
FPF
PCL
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.6)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
library(RJafroc)
set.seed(2)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 2
lesionVector <- rep(1, 5)
nu <- 0.5
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
zk1
zk2Cl
library(RJafroc)
library(testthat)
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
lesionVector <- rep(1, 5)
nu <- 0.8
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
set.seed(1)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 1
lesionVector <- rep(1, 5)
nu <- 0.8
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
lrocData$NL[1,1,,1]
ret
ret[1,1]
as.vector(ret
)
expect_equal(aas.vector(ret), c(0.8, 1.0, 0.4, 0.8, 0.4, 0.8, 0.6, 0.6, 0.8, 0.4))
expect_equal(as.vector(ret), c(0.8, 1.0, 0.4, 0.8, 0.4, 0.8, 0.6, 0.6, 0.8, 0.4))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.05)
as.vector(ret)
expect_equal(as.vector(ret), c(0.04, 0.05, 0.02, 0.04, 0.02, 0.04, 0.03, 0.03, 0.04, 0.02))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
as.vector(ret)
expect_equal(as.vector(ret), c(0.8, 1.0, 0.4, 0.8, 0.4, 0.8, 0.6, 0.6, 0.8, 0.4))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.2)
as.vector(ret)
set.seed(2)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 2
lesionVector <- rep(1, 5)
nu <- 0.5
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
lrocData$NL
lrocData$NL[1,1,,1]
lrocData$LL[1,1,,1]
lrocData$LLCl[1,1,,1]
set.seed(2)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 2
lesionVector <- rep(1, 5)
nu <- 0.5
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.05)
as.vector(ret)
expect_equal(as.vector(ret), c(0.2, 0.4, 0.6, 0.6, 0.2, 0.2, 0.2, 0.4, 0.6, 0.2))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.05)
as.vector(ret)
expect_equal(as.vector(ret), c(0.01, 0.02, 0.03, 0.03, 0.01, 0.01, 0.01, 0.02, 0.03, 0.01))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.1)
as.vector(ret)
expect_equal(as.vector(ret), c(0.2, 0.4, 0.6, 0.6, 0.2, 0.2, 0.2, 0.4, 0.6, 0.2))
expect_equal(as.vector(ret), c(0.2, 0.4, 0.6, 0.6, 0.2, 0.2, 0.2, 0.4, 0.6, 0.1))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.1)
as.vector(ret)
expect_equal(as.vector(ret), c(0.02, 0.04, 0.06, 0.06, 0.02, 0.02, 0.02, 0.04, 0.06, 0.02))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.2)
as.vector(ret)
expect_equal(as.vector(ret), c(0.2, 0.4, 0.6, 0.6, 0.2, 0.2, 0.2, 0.4, 0.6, 0.2))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.2)
as.vector(ret)
expect_equal(as.vector(ret), c(0.04, 0.08, 0.12, 0.12, 0.04, 0.04, 0.04, 0.08, 0.12, 0.04))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.6)
as.vector(ret)
expect_equal(as.vector(ret), c(0.6, 1.0, 1.0, 0.8, 0.4, 0.2, 0.2, 0.6, 0.6, 0.2))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 0.6)
as.vector(ret)
expect_equal(as.vector(ret), c(0.20, 0.48, 0.52, 0.44, 0.20, 0.12, 0.12, 0.32, 0.36, 0.12))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 0.6)
as.vector(ret)
expect_equal(as.vector(ret), c(0.6, 1.0, 1.0, 0.8, 0.4, 0.2, 0.2, 0.6, 0.6, 0.2))
ret <- UtilFigureOfMerit(lrocData, FOM = "PCL", FPFValue = 1)
as.vector(ret)
expect_equal(as.vector(ret), c(0.6, 1.0, 1.0, 0.8, 0.6, 0.2, 0.2, 0.6, 0.6, 0.2))
ret <- UtilFigureOfMerit(lrocData, FOM = "ALROC", FPFValue = 1)
as.vector(ret)
expect_equal(as.vector(ret), c(0.44, 0.88, 0.92, 0.76, 0.44, 0.20, 0.20, 0.56, 0.60, 0.20))
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
x <- pmax(LLCl[i,,],LLIl[i,,])
View(datasetRoc)
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
datasetRoc$NL
datasetRoc$NL[1,1,,1]
datasetRoc$LL[1,1,,1]
dataset$LLIl[1,1,,1]
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
LL[1,1,,1]
library(RJafroc)
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
pmax(LLCl[i,j,],LLIl[i,j,])
LLCl[i,j,]
LLIl[i,j,]
library(RJafroc)
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
pmax(LLCl[i,j,],LLIl[i,j,])
LLCl[i,j,]
LLIl[i,j,]
set.seed(2)
K1 <- 5
K2 <- 5
mu <- 2
lambda <- 2
lesionVector <- rep(1, 5)
nu <- 0.5
zeta1 <- -3
frocData <- SimulateFrocDataset(mu, lambda, nu, zeta1, I = 2, J = 5, K1, K2, lesionVector)
lrocData <- DfFroc2Lroc(frocData)
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
pmax(LLCl[i,j,],LLIl[i,j,])
ret <- UtilFigureOfMerit(lrocData, FOM = "Wilcoxon")
ret
as.vector(ret)
expect_equal(as.vector(ret), c(0.64, 0.88, 0.92, 0.84, 0.62, 0.60, 0.56, 0.84, 0.76, 0.70))
rocData <- DfLroc2Roc(lrocData)
PlotEmpiricalOperatingCharacteristics(rocData)
fp
tp
ret1$fpf
FPF
TPF
devtools::test()
library(RJafroc)
help("RJafroc-package")
