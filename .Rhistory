package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
truthTable[[1]]
truthTable[[2]]
library(RJafroc)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
truthTable[[1]]
if (any(!is.wholenumber(as.numeric(truthTable[[1]])))) stop("Non-integer values in Truth worksheet column 1")
Q
library(RJafroc)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
ds1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInTP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInFP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
library(RJafroc)
library(devtools)
devtools::build_vignettes()
devtools::test()
library(pkgdown)
pkgdown::build_site()
library(RJafroc)
x <- dataset04
library(RJafroc)
help("RJafroc-package")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
str(x)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[1,1,1,1]
x$NL[1,2,1,1]
x$NL[1,1,5,1]
x$NL[1,1,3,1]
x$NL[1,5,2,1]
x$NL[2,3,2,1]
x$NL[2,3,3,1]
x$NL[2,3,4,1]
x$LL[1,1,5,1]
x$LL[1,2,3,1]
x$LL[1,2,2,1]
x$LL == -Inf
any(x$LL == -Inf)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x$lesionVector
x$lesionID
x$lesionWeight
sum(x$NL != -Inf)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(testthat)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x$NL[1,1,1,1]
x$NL[1,1,1,2]
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
library(RJafroc)
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
rm(x1)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[1,1,1,1]
x$NL[1,3,4,1]
x$NL[2,2,4,1]
x$NL[1,3,8,1]
x$NL[2,3,1,]
x$LL[2,3,1,]
x$LL[1,1,1,1]
x$LL[2,1,1,1]
length(x$LL[1,1,1,])
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$dataType
x$NL[1,1,,1]
x$LL[1,1,,1]
x$lesionVector
x$lesionID
x$lesionWeight
x$NL[1,1,,1]
x$NL[1,6,,1]
x$LL[1,1,,1]
x$NL[2,1,,1]
x$LL[2,1,,1]
x$NL[1,2,,1]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
1:5
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
x$LL[,1,1:15,1]
x$LL[,2,1:15,1]
x$LL[,3,1:15,1]
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(devtools)
devtools::test()
devtools::check()
library(RJafroc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
str(x)
x$lesionVector
x$lesionID
x$lesionWeight
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
str(x)
x$NL[,1,1:15,1]
x$NL[,1,1:15,1]
x$NL[,2,1:15,1]
x$NL[,3,1:15,1]
x$NL[,1,1:9,1]
x$NL[,2,1:9,1]
x$NL[,3,1:9,1]
library(RJafroc)
devtools::test()
help("devtools")
devtools::build_vignettes()
library(pkgdown)
pkgdown::build_site()
pkgdown::build_site()
library(RJafroc)
library(devtools)
devtools::clean_vignettes()
devtools::build_vignettes()
help("RJafroc-package")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
dataset03$NL[1,1,1:34,1]
str(dataset03)
dataset03$NL[1,1,1:34,1]
sum(dataset03$NL[,,1:33,1] == -Inf)
x <- DfReadDataFile("inst/vignettes/VanDyke.lrc", format = "lrc")
x <- DfReadDataFile("inst/vignettes/VanDyke.lrc", format = "MRMC")
x$NL[1,1,1:33,1]
dataset03 <- x
save("dataset03", file = "~/GitHub/RJafroc/data/dataset03.RData")
str(dataset03)
x <- DfReadDataFile("inst/vignettes/Franken.lrc", format = "MRMC")
x <- DfReadDataFile("inst/vignettes/Franken1.lrc", format = "MRMC")
str(x)
x$NL[1,1,1:33,1]
dataset03 <- x
save("dataset03", file = "~/GitHub/RJafroc/data/dataset03.RData")
library(RJafroc)
x <- DfReadDataFile("inst/vignettes/Franken1.lrc", format = "MRMC")
str(x)
x <- DfReadDataFile("inst/vignettes/Franken1.lrc", format = "MRMC")
x <- DfReadDataFile("inst/vignettes/Franken1.lrc", format = "MRMC")
library(RJafroc)
x <- DfReadDataFile("inst/vignettes/Franken1.lrc", format = "MRMC")
str(x)
dataset03 <- x
save("dataset03", file = "~/GitHub/RJafroc/data/dataset03.RData")
library(RJafroc)
str(dataset03)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
ret <- StSignificanceTesting(dataset03, FOM = "Wilcoxon", method = "DBMH")
print(ret)
fileName <- "RocData.xlsx"
sysFileName <- system.file(paste0("extdata/",fileName), package = "RJafroc", mustWork = TRUE)
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
casePresent_ij
str(lesionID)
lesionID[casePresent_ij]
casePresent_ij
caseID
caseID == abnormalCases[k2]
library(RJafroc)
ds <- DfReadDataFile(sysFileName, newExcelFileFormat = FALSE)
library(RJafroc)
str(dataset03)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
str(dataset03)
dataset03$NL[1,1,1:33,1]
dataset03$NL[2,3,1:33,1]
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(testthat)
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
ds1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
View(ds)
expect_equal(ds,ds1)
library(RJafroc)
devtools::test()
fileName <- system.file(
"extdata", "RocData.lrc", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/DfReadDataFile_lrc", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
ds <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(ds, file = fn)
}
ds1 <- readRDS(fn)
ds2 <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(ds2, ds1)
fn
fileName <- system.file(
"extdata", "RocData.lrc", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/DfReadDataFile_lrc", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
ds <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(ds, file = fn)
}
ds1 <- readRDS(fn)
ds2 <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(ds2, ds1)
fileName <- system.file(
"extdata", "RocData.lrc", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/Df2RJafrocDataset/DfReadDataFile_lrc", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
ds <- DfReadDataFile(fileName, format = "MRMC")
saveRDS(ds, file = fn)
}
ds1 <- readRDS(fn)
ds2 <- DfReadDataFile(fileName, format = "MRMC")
expect_equal(ds2, ds1)
devtools::clean_vignettes()
devtools::build_vignettes()
library(RJafroc)
library(pkgdown)
pkgdown::build_site()
devtools::clean_vignettes()
devtools::build_vignettes()
devtools::clean_vignettes()
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
ret <- UtilOutputReport(dataset03, FOM = "Wilcoxon", overWrite = TRUE, ReportFileExt = "xlsx")
library(RJafroc)
library(RJafroc)
library(RJafroc)
library(RJafroc)
install.packages("kableExtra")
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:6]
dt
str(dt)
??kable
??`kableExtra-package`
kable(dt, "latex")
kable(dt,format = "html")
dt$mpg
dt
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b)
df
n = c("adv", c(2, 3, 5))
s = c("def", c("aa", "bb", "cc"))
b = c("sda", c(TRUE, FALSE, TRUE))
df = data.frame(n, s, b)
df
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b)
df
row.names(df) <- c("A", "B", "C")
df
rowNames <- rep("A", 4)
col1 <- rep(2, 4)
col2 <- rep(10, 4)
col3 <- c(0,2,5,10)
myTab <- data.frame(col1 = col1, col2 = col2, col3 = col3)
myTab
row.names(myTab) <- rowNames
rowNames <- seq(1, 4)
paste0("A", rowNames)
rowNames <- paste0("A", rowNames)
row.names(myTab) <- rowNames
myTab
seq("A", 4)
rep(A, 4)
rep("A", 4)
seq(A, 4)
seq("A", 4)
letters(1, 4)
LETTERS[seq(1, 4)]
library(pkgdown)
pkgdown::build_site()
library(RJafroc)
install.packages(c("bbmle", "devtools", "ggplot2", "knitr", "pkgdown", "Rcpp", "testthat"))
library(RJafroc)
