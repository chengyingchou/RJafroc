tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(dataset04)
retFit <- FitRsmRoc(dataset04, lesDistr)
rocData <- DfFroc2Roc(dataset04)
retFit <- FitRsmRoc(rocData, lesDistr)
retFit$ChisqrFitStats
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
binnedRocData <- DfBinDataset(rocData, desiredNumBins = 5, opChType = "ROC")
retFit <- FitRsmRoc(binnedRocData, lesDistr)
nBinsComb
fpCounts
tpCounts
fpGoodness
tpGoodness
library(RJafroc)
dataset <- dataset01
lesDistr <- UtilLesionDistribution(dataset)
rocData <- DfFroc2Roc(dataset)
binnedRocData <- DfBinDataset(rocData, desiredNumBins = 5, opChType = "ROC")
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 4)
retFit$ChisqrFitStats
dataset <- dataset01
lesDistr <- UtilLesionDistribution(dataset)
rocData <- DfFroc2Roc(dataset)
binnedRocData <- DfBinDataset(rocData, desiredNumBins = 5, opChType = "ROC")
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
retFit$ChisqrFitStats
dataset <- dataset01
lesDistr <- UtilLesionDistribution(dataset)
rocData <- DfFroc2Roc(dataset)
binnedRocData <- DfBinDataset(rocData, desiredNumBins = 6, opChType = "ROC")
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
retFit$ChisqrFitStats
retFit$fittedPlot
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
fpCounts
tpCounts
retComb1
retComb1 <- CombBins(retComb1$obs[c(2, 1), , drop = FALSE], retComb1$prob[c(2, 1), , drop = FALSE])
obs1 <- retComb1$obs[c(2, 1), , drop = FALSE]; exp1 <- retComb1$prob[c(2, 1), , drop = FALSE] * rowSums(obs1)
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
nBinsComb
fpGoodness
tpGoodness
fpCounts
tpCounts
library(RJafroc)
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
library(RJafroc)
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
library(RJafroc)
retFit <- FitRsmRoc(binnedRocData, lesDistr, trt = 2, rdr = 3)
retFit$ChisqrFitStats
retFit <- FitBinormalRoc(dataset02);print(retFit$fittedPlot)
binned <- DfBinDataset(dataset05, desiredNumBins = 5, opChType = "ROC")
retFit <- FitBinormalRoc(binned);print(retFit$fittedPlot)
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitBinormalRoc(dataset);print(retFit$fittedPlot)
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitBinormalRoc(dataset);print(retFit$fittedPlot)
retFit <- FitBinormalRoc(datasetDegenerate);print(retFit$fittedPlot)
retFit <- FitCbmRoc(dataset02);print(retFit$fittedPlot)
retFit <- FitCbmRoc(datasetDegenerate);print(retFit$fittedPlot)
retFit <- FitCbmRoc(dataset02);print(retFit$fittedPlot)
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
retFit <- FitCbmRoc(dataset02, 2, 1);print(retFit$fittedPlot)
retFit$ChisqrFitStats
retFit <- FitCbmRoc(dataset01, 2, 3);print(retFit$fittedPlot)
ds <- DfFroc2Roc(FitCbmRoc(dataset01, 2, 3))
ds <- DfFroc2Roc(dataset01, 2, 3)
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
## Test with included ROC data
retFit <- FitCbmRoc(dataset02);print(retFit$fittedPlot)
## Test with included degenerate ROC data (yes! CBM can fit such data)
retFit <- FitCbmRoc(datasetDegenerate);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
retFit <- FitCbmRoc(dataset02, 2, 1);print(retFit$fittedPlot)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
## Test with included ROC data
retFit <- FitCbmRoc(dataset02);print(retFit$fittedPlot)
## Test with included degenerate ROC data (yes! CBM can fit such data)
retFit <- FitCbmRoc(datasetDegenerate);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
retFit <- FitCbmRoc(dataset02, 2, 1);print(retFit$fittedPlot)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
## Test with included degenerate ROC data
lesDistr <- UtilLesionDistribution(datasetDegenerate)
retFit <- FitRsmRoc(datasetDegenerate, lesDistr);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## Test with three interior data points
fp <- c(rep(1,12), rep(2, 5), rep(3, 3), rep(4, 5)) #25
tp <- c(rep(1,3), rep(2, 5), rep(3, 7), rep(4, 10)) #25
binnedRocData <- Df2RJafrocDataset(fp, tp)
lesDistr <- UtilLesionDistribution(binnedRocData)
retFit <- FitRsmRoc(binnedRocData, lesDistr);print(retFit$fittedPlot)
## test for TONY data, i = 2 and j = 3; only case permitting chisqure calculation
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
## Test with included ROC data
retFit <- FitCbmRoc(dataset02);print(retFit$fittedPlot)
## Test with included degenerate ROC data (yes! CBM can fit such data)
retFit <- FitCbmRoc(datasetDegenerate);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitCbmRoc(dataset);print(retFit$fittedPlot)
## Test with included ROC data (some bins have zero counts)
retFit <- FitCbmRoc(dataset02, 2, 1);print(retFit$fittedPlot)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
## Test with an included ROC dataset
retFit <- FitBinormalRoc(dataset02);print(retFit$fittedPlot)
## Test with an included FROC dataset; it needs to be binned
## as there are more than 5 discrete ratings levels
binned <- DfBinDataset(dataset05, desiredNumBins = 5, opChType = "ROC")
retFit <- FitBinormalRoc(binned);print(retFit$fittedPlot)
## Test with single interior point data
fp <- c(rep(1,7), rep(2, 3))
tp <- c(rep(1,5), rep(2, 5))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitBinormalRoc(dataset);print(retFit$fittedPlot)
## Test with two interior data points
fp <- c(rep(1,7), rep(2, 5), rep(3, 3))
tp <- c(rep(1,3), rep(2, 5), rep(3, 7))
dataset <- Df2RJafrocDataset(fp, tp)
retFit <- FitBinormalRoc(dataset);print(retFit$fittedPlot)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
lesDistr <- UtilLesionDistribution(dataset02)
retFit <- FitRsmRoc(dataset02, lesDistr)
print(retFit$fittedPlot)
library(RJafroc)
retFit <- FitBinormalRoc(datasetDegenerate);print(retFit$fittedPlot)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
ds <- DfFroc2Roc(dataset01)
retFit <- FitCbmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
ds <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
lesDistr <- UtilLesionDistribution(dataset01)
rocData <- DfFroc2Roc(dataset01)
retFit <- FitRsmRoc(rocData, lesDistr, trt = 2, rdr = 3)
print(retFit$fittedPlot)
retFit$ChisqrFitStats
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
fpExpProb
tpExpProb
fpGoodness
tpGoodness
library(RJafroc)
## Test with TONY data for which chisqr can be calculated
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
library(RJafroc)
ds <- DfFroc2Roc(dataset01)
retFit <- FitBinormalRoc(ds, 2, 3);print(retFit$fittedPlot)
retFit$ChisqrFitStats
