msngCell <- system.file("extdata", "toyFiles/ROC/missing1CellRow5.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(msngCell, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSpZeroWgts <- system.file("extdata", "toyFiles/FROC/frocSpZeroWgts.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSpZeroWgts, newExcelFileFormat = TRUE)
frocSpDelRowsFP <- system.file("extdata", "toyFiles/FROC/frocSpDelRowsFP.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSpDelRowsFP, newExcelFileFormat = TRUE)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocCr2BlankRows <- system.file("extdata", "toyFiles/FROC/frocCr2BlankRows.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocCr2BlankRows, newExcelFileFormat = TRUE)
testthat::expect_equal(x, x1)
rm(x1)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
x1 <- DfReadDataFile(rocCr, newExcelFileFormat = FALSE)
testthat::expect_equal(x, x1)
rm(x1)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x1 <- DfReadDataFile(frocCr, newExcelFileFormat = FALSE)
testthat::expect_equal(x, x1)
rm(x1)
msngCell <- system.file("extdata", "toyFiles/ROC/missing1CellRow5.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(msngCell, newExcelFileFormat = TRUE)
msngCells <- system.file("extdata", "toyFiles/ROC/missing2CellsRow5and7.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(msngCells, newExcelFileFormat = TRUE)
nonIntegerCells <- system.file("extdata", "toyFiles/ROC/non-integerCellsRows5and7.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(nonIntegerCells, newExcelFileFormat = TRUE)
testthat::expect_error(DfReadDataFile(nonIntegerCells, newExcelFileFormat = TRUE))
testthat::expect_error(DfReadDataFile(msngCell, newExcelFileFormat = TRUE))
testthat::expect_error(DfReadDataFile(msngCells, newExcelFileFormat = TRUE))
testthat::expect_error(DfReadDataFile(nonIntegerCells, newExcelFileFormat = TRUE))
source('~/GitHub/RJafroc/inst/DfReadDataFile/splitPlot.R')
source('~/GitHub/RJafroc/inst/DfReadDataFile/splitPlot.R')
dupRow <- system.file("extdata", "toyFiles/FROC/duplicatedRow.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(dupRow, newExcelFileFormat = TRUE)
dupRow <- system.file("extdata", "toyFiles/ROC/duplicatedRow.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(dupRow, newExcelFileFormat = TRUE)
incSheetName <- system.file("extdata", "toyFiles/ROC/incorrectSheetName.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
incSheetName <- system.file("extdata", "toyFiles/ROC/incorrectSheetName.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
truthFileIndex
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
truthFileIndex
str(truthFileIndex)
truthFileIndex == 0
length(truthFileIndex)
if (length(truthFileIndex) == 0) stop("TRUTH table cannot be found in the dataset.")
length(truthFileIndex)
length(truthFileIndex) == 0
library(RJafroc)
x <- DfReadDataFile(incSheetName, newExcelFileFormat = TRUE)
library(RJafroc)
source('~/GitHub/RJafroc/inst/DfReadDataFile/splitPlot.R')
incWeights <- system.file("extdata", "toyFiles/ROC/incorrectWeights.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(incWeights, newExcelFileFormat = TRUE))
DfReadDataFile(incWeights, newExcelFileFormat = TRUE)
library(RJafroc)
msngCell <- system.file("extdata", "toyFiles/ROC/missing1CellRow5.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(msngCell, newExcelFileFormat = TRUE)
msngCells <- system.file("extdata", "toyFiles/ROC/missing2CellsRow5and7.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(msngCells, newExcelFileFormat = TRUE)
library(RJafroc)
msngCells <- system.file("extdata", "toyFiles/ROC/missing2CellsRow5and7.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(msngCells, newExcelFileFormat = TRUE)
library(RJafroc)
DfReadDataFile(msngCell, newExcelFileFormat = TRUE)
DfReadDataFile(msngCells, newExcelFileFormat = TRUE)
msngRow <- system.file("extdata", "toyFiles/ROC/missingEntireRow.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(msngRow, newExcelFileFormat = TRUE))
msngRow <- system.file("extdata", "toyFiles/ROC/missingEntireRow.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(msngRow, newExcelFileFormat = TRUE)
msngRow <- system.file("extdata", "toyFiles/ROC/missingEntireRow5.xlsx",
package = "RJafroc", mustWork = TRUE)
msngRow <- system.file("extdata", "toyFiles/ROC/missingEntireRow5.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(msngRow, newExcelFileFormat = TRUE)
nonNumericWeight <- system.file("extdata", "toyFiles/ROC/non-numeric-weight.xlsx",
package = "RJafroc", mustWork = TRUE)
DfReadDataFile(nonNumericWeight, newExcelFileFormat = TRUE)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
testthat::expect_equal(x,x1)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocOld <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocOld, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
rm(x1)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSpZeroWgts <- system.file("extdata", "toyFiles/FROC/frocSpZeroWgts.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSpZeroWgts, newExcelFileFormat = TRUE)
frocSpDelRowsFP <- system.file("extdata", "toyFiles/FROC/frocSpDelRowsFP.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSpDelRowsFP, newExcelFileFormat = TRUE)
frocCr2BlankRows <- system.file("extdata", "toyFiles/FROC/frocCr2BlankRows.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocCr2BlankRows, newExcelFileFormat = TRUE)
testthat::expect_equal(x, x1)
rm(x1)
frocCr2BlankRows <- system.file("extdata", "toyFiles/FROC/frocCr2BlankRows.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(frocCr2BlankRows, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
testthat::expect_equal(x,x1)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
incCaseIdsFP <- system.file("extdata", "toyFiles/FROC/incorrectCaseIDsInFP.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE))
DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
NLCaseIDColumn
TruthCaseID
NLCaseIDColumn %in% TruthCaseID
NLCaseIDColumn %in% normalCases
any(!NLCaseIDColumn %in% normalCases)
library(RJafroc)
DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
normalCases
any(!(LLCaseIDColumn %in% normalCases))
any(!(LLCaseIDColumn %in% TruthCaseID))
library(RJafroc)
DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
y <- DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
LLCaseIDColumn
normalCases
LLCaseIDColumn %in% normalCases
any(LLCaseIDColumn %in% normalCases)
library(RJafroc)
y <- DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
incCaseIdsTP <- system.file("extdata", "toyFiles/FROC/incorrectCaseIDsInTP.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE))
y <- DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE)
y <- DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE)
any(!(LLCaseIDColumn %in% TruthCaseID))
library(RJafroc)
y <- DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE)
TruthCaseID
LLCaseIDColumn
LLCaseIDColumn %in% TruthCaseID
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
library(RJafroc)
library(RJafroc)
# incCaseIdsFP <- system.file("extdata", "toyFiles/FROC/incorrectCaseIDsInFP.xlsx",
#                             package = "RJafroc", mustWork = TRUE)
# testthat::expect_error(DfReadDataFile(incCaseIdsFP, newExcelFileFormat = TRUE))
#
incCaseIdsTP <- system.file("extdata", "toyFiles/FROC/incorrectCaseIDsInTP.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE))
DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE)
library(RJafroc)
DfReadDataFile(incCaseIdsTP, newExcelFileFormat = TRUE)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
library(RJafroc)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
library(RJafroc)
??`RJafroc-package`
??`RJafroc-package`
help("RJafroc-package")
fileName <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
fileName <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
library(RJafroc)
{
fileName <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file("extdata", "toyFiles/FROC/frocOld.xlsx",
package = "RJafroc", mustWork = TRUE)
x1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
testthat::expect_equal(x,x1)
}
fileName <- system.file("extdata", "RocData.xlsx",
package = "RJafroc", mustWork = TRUE)
RocDataXlsx <- DfReadDataFile(fileName)
fileName <- system.file("extdata", "RocData.csv",
package = "RJafroc", mustWork = TRUE)
RocDataCsv<- DfReadDataFile(fileName, format = "MRMC")
fileName <- system.file("extdata", "RocData.imrmc",
package = "RJafroc", mustWork = TRUE)
RocDataImrmc<- DfReadDataFile(fileName, format = "iMRMC")
fileName <- system.file("extdata", "FrocData.xlsx",
package = "RJafroc", mustWork = TRUE)
FrocDataXlsx <- DfReadDataFile(fileName, sequentialNames = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(testthat)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
dsx <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
dsx <- dsx[-6] # delete the data type FROC
ds <- ds[-6]# delete the data type ROC
expect_equal(dsx, ds)
fileName <- system.file(
"extdata", "/toyFiles/ROC/missing2CellsRow5and7.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/missingEntireRow5.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/missing1CellRow5.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
caseID
truthTable[[1]]
as.character(truthTable[[1]])
library(RJafroc)
###########################################################################
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
library(RJafroc)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
lesionID
truthTable[[2]]
as.integer(as.character(truthTable[[2]]))
as.character(truthTable[[2]])
as.numeric(truthTable[[2]])
is.integer(as.numeric(truthTable[[2]]))
is.integer(truthTable[[2]])
is.integer(as.integer(truthTable[[2]]))
truthTable[[4]]
library(RJafroc)
is.integer(1)
is.wholenumber(1)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/incorrectWeights.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-numeric-weight.xlsx", package = "RJafroc", mustWork = TRUE)
expect_warning(expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE)))
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/duplicatedRow.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/incorrectSheetName.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/rocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/rocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
DfReadDataFile(fileName, newExcelFileFormat = TRUE
)
is.integer(truthTable[[1]])
truthTable[[1]]
typeof(truthTable)
typeof(truthTable[[1]])
!is.double(truthTable[[1]])
is.double(truthTable[[1]])
if (!is.double(truthTable[[1]])) stop("Non-integer values in Truth Table column 1")
if (!is.double(truthTable[[2]])) stop("Non-integer values in Truth Table column 2")
if (!is.double(truthTable[[3]])) stop("Non-integer values in Truth Table column 3")
is.wholenumber <- function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol
is.wholenumber(1.1)
is.wholenumber(1.1, 2)
is.wholenumber(c(1.1, 2))
if (any(!is.wholenumber(truthTable[[1]]))) stop("Non-integer values in Truth Table column 1")
if (any(!is.wholenumber(truthTable[[2]]))) stop("Non-integer values in Truth Table column 2")
if (any(!is.wholenumber(truthTable[[3]]))) stop("Non-integer values in Truth Table column 3")
if (any(!is.double(truthTable[[3]]))) stop("Non-integer values in Truth Table column 3")
library(RJafroc)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
!is.wholenumber(truthTable[[1]])
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerCaseID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/ROC/non-integerLesionID.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
###########################################################################
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
truthTable[[1]]
truthTable[[2]]
library(RJafroc)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
library(RJafroc)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
truthTable[[1]]
if (any(!is.wholenumber(as.numeric(truthTable[[1]])))) stop("Non-integer values in Truth worksheet column 1")
Q
library(RJafroc)
DfReadDataFile(fileName, newExcelFileFormat = TRUE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocSp.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocSp", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
ds1 <- DfReadDataFile(fileName, newExcelFileFormat = FALSE)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocCr.xlsx", package = "RJafroc", mustWork = TRUE)
fn <- paste0(test_path(), "/goodValues361/DfReadDataFile/frocCr", ".rds")
if (!file.exists(fn)) {
warning(paste0("File not found - generating new ",fn))
temp <- DfReadDataFile(fileName, newExcelFileFormat = TRUE)
saveRDS(temp, file = fn)
}
ds <- readRDS(fn)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = TRUE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/frocOld.xlsx", package = "RJafroc", mustWork = TRUE)
expect_equal(DfReadDataFile(fileName, newExcelFileFormat = FALSE), ds)
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInTP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
fileName <- system.file(
"extdata", "/toyFiles/FROC/incorrectCaseIDsInFP.xlsx", package = "RJafroc", mustWork = TRUE)
expect_error(DfReadDataFile(fileName, newExcelFileFormat = TRUE))
library(RJafroc)
library(devtools)
devtools::build_vignettes()
devtools::test()
library(pkgdown)
pkgdown::build_site()
