knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$truthTableStr[1,1,1,1]
x$truthTableStr[1,1,6,1]
x$truthTableStr[1,1,6,2]
x$truthTableStr[1,1,6,2]
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$truthTableStr[1,1,6,2]
x$truthTableStr[1,1,6,1]
x$truthTableStr[1,1,16,1]
x$truthTableStr[1,1,16,2]
x$truthTableStr[1,1,1,2]
x$truthTableStr[1,1,1,0]
x$truthTableStr[1,1,1,1]
x$truthTableStr[1,1,1,1]
x$truthTableStr[1,1,1,]
###########################################################################
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
x$truthTableStr[1,1,1,]
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
unique(lesionIDCol)
isReaderIDArray
casePresent_ij
modalityIDArray[i,]
modalityIDUnique[i]
readerID
readerIDUnique[j]
(modalityIDArray[i,] == modalityIDUnique[i]) & (readerID == readerIDUnique[j]) & (lesionIDCol == unique(lesionIDCol)[which(unique(lesionIDCol) == el)])
which(unique(lesionIDCol) == el)
lesionIDCol == unique(lesionIDCol)
lesionIDCol == unique(lesionIDCol)[1]
sum(casePresent_ij)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
truthTableStr[1,1,1,1]
truthTableStr[1,1,1,2]
truthTableStr[1,1,16,2]
truthTableStr[1,1,16,1]
truthTableStr[1,1,16:20,1]
truthTableStr[1,1,16:20,2]
truthTableStr[1,1,1:15:20,1]
truthTableStr[1,1,1:15,1]
truthTableStr[1,2,1:15,1]
truthTableStr[1,3,1:15,1]
truthTableStr[1,1,16:30,1]
truthTableStr[1,1,16:30,2]
truthTableStr[1,2,16:30,2]
truthTableStr[1,3,16:30,2]
sum(!is.na(truthTableStr))
2*I*J*K
(dataType == "ROC") && (design == "SPLIT-PLOT") && (sum(!is.na(truthTableStr)) != I*K)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
sum(!is.na(truthTableStr))
I*K
(dataType == "ROC") && (design == "SPLIT-PLOT") && (sum(!is.na(truthTableStr)) != I*K)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
I*J*K
library(RJafroc)
library(RJafroc)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
length(caseID)*length(readerID)*length(modalityID)
readerIDUnique
length(readerIDArray[,1])
length(modalityIDArray[,1])
L*length(readerIDArray[,1])*length(modalityIDArray[,1])
if ((dataType == "ROC") &&
(design == "CROSSED") &&
(sum(!is.na(truthTableStr))
!= L*length(readerIDArray[,1])*length(modalityIDArray[,1])))
stop("Dataset does not appear to be crossed ROC")
library(RJafroc)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
L*length(readerIDArray[,1])*length(modalityIDArray[,1]))
L*length(readerIDArray[,1])*length(modalityIDArray[,1])
L*length(readerIDUnique)*length(modalityIDArray[,1])
L*length(modalityIDArray[,1])
I*K
if ((design == "SPLIT-PLOT") && (sum(!is.na(truthTableStr)) != L*length(modalityIDArray[,1])))
if ((design == "SPLIT-PLOT") && (sum(!is.na(truthTableStr)) != L*length(modalityIDArray[,1])))
stop("Dataset does not appear to be split plot ROC")
if ((design == "SPLIT-PLOT") && (sum(!is.na(truthTableStr)) != L*length(modalityIDArray[,1])))
stop("Dataset does not appear to be split plot ROC")
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
L*length(readerIDArray[,1])*length(modalityIDArray[,1]))
L*length(readerIDArray[,1])*length(modalityIDArray[,1]))
L*length(readerIDArray[,1])*length(modalityIDArray[,1])
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
I*J*K
sum(!is.na(truthTableStr)
)
L*length(readerIDArray[,1])*length(modalityIDArray[,1])
library(RJafroc)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
x$truthTableStr[,1,1:5,1]
x$truthTableStr[,1,1:5,2]
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
truthTableStr[,1,1:5,2]
truthTableStr[,1,1:5,1]
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$truthTableStr[,1,1:5,1]
x$truthTableStr[,1,1:5,2]
x$truthTableStr[1,1,15,1]
x$truthTableStr[,1,1:15,2]
x$truthTableStr[,1,1:15,1]
x$truthTableStr[,1,16:30,1]
x$truthTableStr[,1,16:30,2]
x$truthTableStr[,1,1:15,1]
x$truthTableStr[,1,1:15,2]
x$truthTableStr[,1,1:15,2]
x$truthTableStr[,1,1:15,2]
x$truthTableStr[,2,1:15,1]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
x$truthTableStr[,1,1:15,1]
x$truthTableStr[,1,1:15,2]
x$truthTableStr[,2,1:15,1]
x$truthTableStr[,1,16:30,1]
library(RJafroc)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
caseIDs_ij
which(caseIDs_ij[k1] == allCases)
caseIDs_ij
which(caseIDs_ij[k1] == allCases)
which(caseIDs_ij[k1] == allCases)
which(caseIDs_ij[k1] == allCases)
caseNLTable[k1]
caseIDs_ij[k1] == allCases)
which(caseIDs_ij[k1] == allCases)
which(caseIDs_ij[k1] == allCases
)
which(caseIDs_ij[k1] == allCases)
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases),1]
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases),1]
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases),1] != 1
casePresent_ij
maxNL
K
modalityIDUnique[i]
readerIDUnique[j]
(sum(casePresent_ij)
)
caseNLTable
NLCaseIDColumn[casePresent_ij]
caseIDs_ij
k1
which(caseIDs_ij[k1] == allCases)
caseIDs_ij[k1]
allCases
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases),1]
truthTableStr[1,1,11,1]
truthTableStr[1,1,11,2:4]
lesionIDCol
unique(lesionIDCol)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
unique(lesionIDCol)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
library(RJafroc)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
unique(lesionIDCol) + 1
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
casePresent_ij
el1
el
which(unique(lesionIDCol) == el)
el
unique(lesionIDCol)
which(unique(lesionIDCol) == el)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
casePresent_ij
caseIDs_ij
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases), el1]
truthTableStr[i,j,which(caseIDs_ij[k1] == allCases), el1]
casePresent_ij
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
modalityIDUnique[i]
readerIDUnique[j]
unique(lesionIDCol)
unique(lesionIDCol)[el1]
lesionIDCol == unique(lesionIDCol)[el1]
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
caseIDs_ij
which(caseIDs_ij %in% abnormalCases)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
NL[1,1,1,1]
NL[1,1,1,2]
NL[1,2,1,1]
NL[1,1,2,1]
NL[1,1,3,1]
NL[1,2,4,1]
NL[1,2,5,1]
NL[1,2,6,1]
NL[1,2,6,2]
NL[1,3,7,1]
NL[1,3,8,1]
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
LL[1,1,1,2]
LL[1,1,1,1]
LL[1,1,2,1]
LL[1,1,3,1]
LL[1,1,4,1]
which(abnormalCases == 94)
LL[1,3,abnormalCases[15],1]
LL[1,3,15,1]
LL[2,1,1,1]
library(RJafroc)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
library(RJafroc)
frocSp <- system.file("extdata", "toyFiles/FROC/frocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocSp, newExcelFileFormat = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocSp <- system.file("extdata", "toyFiles/ROC/rocSp.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSp, newExcelFileFormat = TRUE)
str(x)
library(RJafroc)
rocSpText <- system.file("extdata", "toyFiles/FROC/rocSpText.xlsx",
package = "RJafroc", mustWork = TRUE)
rocSpText <- system.file("extdata", "toyFiles/ROC/rocSpText.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocSpText, newExcelFileFormat = TRUE)
library(RJafroc)
x <- DfReadDataFile(rocSpText, newExcelFileFormat = TRUE)
library(RJafroc)
# following uses non-integer caseIDs; it will not work
rocSpText <- system.file("extdata", "toyFiles/ROC/rocSpText.xlsx",
package = "RJafroc", mustWork = TRUE)
testthat::expect_error(DfReadDataFile(rocSpText, newExcelFileFormat = TRUE))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RJafroc)
rocCr <- system.file("extdata", "toyFiles/ROC/rocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(rocCr, newExcelFileFormat = TRUE)
str(x)
library(RJafroc)
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[2,2,4,1]
x$NL[1,1,1,1]
frocCr <- system.file("extdata", "toyFiles/FROC/frocCr.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCr, newExcelFileFormat = TRUE)
str(x)
x$NL[2,2,4,1]
x$NL[1,1,1,1]
library(RJafroc)
x$NL[2,1,8,1]
x$NL[2,3,5,1:2]
x$NL[2,3,5,1:2]
library(RJafroc)
x$LL[1,1,1,1]
x$LL[2,1,1,1]
library(RJafroc)
source('~/GitHub/RJafroc/inst/DfReadDataFile/checkDfReadDataFile.R')
library(pkgdown)
library(devtools)
devtools::build_site()
library(RJafroc)
library(RJafroc)
###########################################################################
frocCrAbnormalCasesFirst <- system.file("extdata", "toyFiles/FROC/frocCrAbnormalCasesFirst.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCrAbnormalCasesFirst, newExcelFileFormat = TRUE)
library(RJafroc)
library(RJafroc)
###########################################################################
frocCrAbnormalCasesFirst <- system.file("extdata", "toyFiles/FROC/frocCrAbnormalCasesFirst.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCrAbnormalCasesFirst, newExcelFileFormat = TRUE)
frocCrAbnormalCasesFirst <- system.file("extdata", "toyFiles/FROC/frocCrAbnormalCasesFirst.xlsx",
package = "RJafroc", mustWork = TRUE)
x <- DfReadDataFile(frocCrAbnormalCasesFirst, newExcelFileFormat = TRUE)
lesWghts <- UtilLesionWeightsDistr(x)
lesDistr
lesWghtDistr
lesDistr
lesDistr <- UtilLesionDistribution(x)
str(dataset)
lesionVector
lesDistr
table(lesionVector)
lesionVector
1/9
6/9
3/9
5/9
lesWghts <- UtilLesionWeightsDistr(x)
lesDistr
help("UtilLesionWeightsDistr")
library(RJafroc)
library(RJafroc)
library(RJafroc)
PlotRsmOperatingCharacteristics
help(PlotRsmOperatingCharacteristics)
lesDistr <- rbind(c(1, 0.2), c(2, 0.4), c(3, 0.1), c(4, 0.3))
lesDistr
lesWghtDistr <- rbind(c(1.0, -Inf, -Inf, -Inf),
c(0.4,  0.6, -Inf, -Inf),
c(0.2,  0.3,  0.5, -Inf),
c(0.3,  0.4, 0.2,  0.1))
lesWghtDistr
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
c(length(mu) == length(lambda), length(mu) == length(nu))
is.wholenumber(lesDistr)
length(lesDistr) == 1
lesDistr
length(lesDistr)
rowWeight
abs(sum(rowWeight[rowWeight != -Inf])
)
nWeight
nWeight
rowWeight
lesDistr[r , 1]
lesDistr
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
myNegInf
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
library(RJafroc)
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
FPF
maxFPF
as.character(i)
library(RJafroc)
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
str(zeta)
mu
nuP
lesDistr
lesWghtDistr
library(RJafroc)
ret <- PlotRsmOperatingCharacteristics(mu = c(2, 3), lambda = c(1, 1.5), nu = c(0.6, 0.8),
lesDistr = lesDistr, lesWghtDistr = lesWghtDistr,
legendPosition = "bottom", nlfRange = c(0, 1), llfRange = c(0, 1))
lesDistr[, 2]
sum(lesDistr[, 2])
lesDistr
nLesion
lesWghtDistr
lesWghtDistr[L, 1:l]
sum(lesWghtDistr[L, 1:l])
nLesion
sum(lesWghtDistr[L, 1:l])
lesWghtDistr
lesWghtDistr
L
esWghtDistr[L, 1:l]
lesWghtDistr[L, 1:l]
??dbinom
library(RJafroc)
library(RJafroc)
dataset07$lesionID
dataset11$lesionVector
x <- dataset11
library(RJafroc)
library(RJafroc)
help("RJafroc-package")
library(RJafroc)
library(RJafroc)
